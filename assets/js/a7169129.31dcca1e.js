(self.webpackChunkyagpdb_cc_website=self.webpackChunkyagpdb_cc_website||[]).push([[5197],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return d},kt:function(){return g}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(r),g=a,m=u["".concat(s,".").concat(g)]||u[g]||c[g]||o;return r?n.createElement(m,i(i({ref:t},d),{},{components:r})):n.createElement(m,i({ref:t},d))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},8924:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return d},default:function(){return u}});var n=r(2122),a=r(9756),o=(r(7294),r(3905)),i=["components"],l={sidebar_position:7,title:"Leaderboard CC"},s=void 0,p={unversionedId:"leveling/leaderboard",id:"leveling/leaderboard",isDocsHomePage:!1,title:"Leaderboard CC",description:"This command manages the leaderboard.",source:"@site/docs/leveling/leaderboard.md",sourceDirName:"leveling",slug:"/leveling/leaderboard",permalink:"/leveling/leaderboard",editUrl:"https://github.com/yagpdb-cc/yagpdb-cc/edit/master/yagpdb-cc-website/docs/leveling/leaderboard.md",version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,title:"Leaderboard CC"},sidebar:"tutorialSidebar",previous:{title:"Set XP/Level CC",permalink:"/leveling/setxp"},next:{title:"Reaction Listener CC",permalink:"/leveling/reactionlistender"}},d=[],c={toc:d};function u(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This command manages the leaderboard."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Trigger Type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"Regex")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Trigger:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"\\A(-|<@!?204255221017214977>\\s*)(leaderboard|lb|top)(\\s+|\\z)")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Usage:"),(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"-leaderboard [page]")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'{{/*\n    This command manages the leaderboard. Usage is -leaderboard [page] where page is optional.\n\n    Recommended trigger: Regex trigger with trigger `\\A(-|<@!?204255221017214977>\\s*)(leaderboard|lb|top)(\\s+|\\z)`.\n*/}}\n{{ $page := 1 }} {{/* Default page to start at */}}\n{{ with reFind `\\d+` (joinStr " " .CmdArgs) }} {{ $page = . | toInt }} {{ end }} {{/* If the user provided a page, change $page variable to that */}}\n{{ $skip := mult (sub $page 1) 10 }} {{/* Amount of entries to skip */}}\n{{ $users := dbTopEntries "xp" 10 $skip }} {{/* Retrieve the relevant DB entries with the parameters provided */}}\n{{ if not (len $users) }}\n    There were no users on that page! {{/* If there were no users, return */}}\n{{ else }}\n    {{ $rank := $skip }} {{/* Instantiate rank variable with value of $skip */}}\n    {{ $display := "" }} {{/* The description for the leaderboard description */}}\n    {{ range $users }}\n        {{- $xp := toInt .Value }} {{/* XP for this user entry */}}\n        {{- $rank = add $rank 1 }} {{/* Increment rank variable */}}\n        {{- $display = printf "%s\\n\u2022 **%d.** [%s](https://yagpdb.xyz) :: Level %d (%d XP)"\n            $display $rank .User.String (toInt (roundFloor (mult 0.1 (sqrt $xp)))) $xp\n        }} {{- /* Format this line */ -}}\n    {{ end }}\n    {{ $id := sendMessageRetID nil (cembed\n        "title" "\u276f Leaderboard"\n        "thumbnail" (sdict "url" "https://i.imgur.com/mJ7zu6k.png")\n        "color" 14232643\n        "description" $display\n        "footer" (sdict "text" (joinStr "" "Page " $page))\n    ) }} {{/* Construct and send the embed */}}\n    {{ addMessageReactions nil $id "\u25c0\ufe0f" "\u25b6\ufe0f" }} {{/* Add reactions for pagination */}}\n{{ end }}\n')))}u.isMDXComponent=!0}}]);