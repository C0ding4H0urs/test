(self.webpackChunkyagpdb_cc_website=self.webpackChunkyagpdb_cc_website||[]).push([[8261],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return u},kt:function(){return g}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),c=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(p.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,s=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=c(t),g=a,m=d["".concat(p,".").concat(g)]||d[g]||l[g]||s;return t?r.createElement(m,i(i({ref:n},u),{},{components:t})):r.createElement(m,i({ref:n},u))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=t.length,i=new Array(s);i[0]=d;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var c=2;c<s;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5563:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return u},default:function(){return d}});var r=t(2122),a=t(9756),s=(t(7294),t(3905)),i=["components"],o={sidebar_position:5,title:"newgame"},p=void 0,c={unversionedId:"funccs/YAGPDB-CAH-groups/newgame",id:"funccs/YAGPDB-CAH-groups/newgame",isDocsHomePage:!1,title:"newgame",description:"This command starts a new CAH game using the specified packs and pack groups.",source:"@site/docs/funccs/YAGPDB-CAH-groups/newgame.md",sourceDirName:"funccs/YAGPDB-CAH-groups",slug:"/funccs/YAGPDB-CAH-groups/newgame",permalink:"/funccs/YAGPDB-CAH-groups/newgame",editUrl:"https://github.com/yagpdb-cc/yagpdb-cc/edit/master/yagpdb-cc-website/docs/funccs/YAGPDB-CAH-groups/newgame.md",version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"newgame"},sidebar:"tutorialSidebar",previous:{title:"listgroups",permalink:"/funccs/YAGPDB-CAH-groups/listgroups"},next:{title:"setgroup",permalink:"/funccs/YAGPDB-CAH-groups/setgroup"}},u=[],l={toc:u};function d(e){var n=e.components,t=(0,a.Z)(e,i);return(0,s.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"This command starts a new CAH game using the specified packs and pack groups.",(0,s.kt)("br",{parentName:"p"}),"\n","It first checks whether each argument is a valid pack group and, if so, expands it into its component packs. If not, that argment is assumed to be an individual pack and is skipped.",(0,s.kt)("br",{parentName:"p"}),"\n","After expanding all applicable pack groups, the resulting list of packs is used to start a new game, and all members with the CAH role are pinged."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Trigger Type:")," ",(0,s.kt)("inlineCode",{parentName:"p"},"Command")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Trigger:")," ",(0,s.kt)("inlineCode",{parentName:"p"},"newgame")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Usage:"),(0,s.kt)("br",{parentName:"p"}),"\n",(0,s.kt)("inlineCode",{parentName:"p"},'-newgame pack1 "pack 2" packGroup1 "pack group 2" etc')," (no specific ordering necessary)"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},'{{/*\n    This command starts a new CAH game using the specified packs and pack groups.\n    It first checks whether each argument is a valid pack group and, if so, expands it into its component packs. If not, that argment is assumed to be an individual pack and is skipped. After expanding all applicable pack groups, the resulting list of packs is used to start a new game, and all members with the CAH role are pinged.\n\n    Usage: `-newgame pack1 "pack 2" packGroup1 "pack group 2" etc` (no specific ordering necessary)\n\n    Recommended trigger: `newgame`\n    Trigger type: Command\n\n    Credits:\n    LRitzdorf <https://github.com/LRitzdorf>\n*/}}\n\n{{/* This is the default list of packs to use if nothing is specified: */}}\n{{ $packs := "*" }}\n{{/* This is the ID of the CAH role, which will be pinged when a new game is started: */}}\n{{ $CAHrole := 123456789 }}\n\n{{ if gt (len .CmdArgs) 0 }}\n    {{ $star := false }}\n    {{ $reqst := cslice }}\n    {{ range .CmdArgs }}\n        {{- $dbResult := dbGet 0 (joinStr "" "group " .) }}\n        {{- if $dbResult }}\n            {{- $reqst = $reqst.Append $dbResult.Value }}\n        {{- else }}\n            {{- $reqst = $reqst.Append . }}\n        {{- end }}\n    {{- end }}\n    {{ $packs = "" }}\n    {{ range $reqst }}\n        {{- if (eq . "*") }}\n            {{- $star = true }}\n        {{- else }}\n            {{- if eq (len (reFindAll (joinStr "" "(" . ")") $packs)) 0 }}\n                {{- $packs = joinStr " " $packs . }}\n           {{- end }}\n        {{- end }}\n    {{- end }}\n    {{ if $star }}\n        {{ $packs = "*" }}\n    {{ end }}\n{{ end }}\n \n{{ $resp := exec "cah create" $packs }}\n{{ if eq (len (reFind "Unknown pack" $resp)) 0 }}\n    {{.User.Mention}} has summoned all the{{mentionRoleID $CAHrole}}s to a new game!\nWe\'ll be using the following pack(s): `{{$packs}}`.\n{{ end }}\n{{ $resp }}\n')))}d.isMDXComponent=!0}}]);