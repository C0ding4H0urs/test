(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6988],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return c},kt:function(){return d}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=p(t),d=a,g=m["".concat(l,".").concat(d)]||m[d]||u[d]||i;return t?r.createElement(g,s(s({ref:n},c),{},{components:t})):r.createElement(g,s({ref:n},c))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,s=new Array(i);s[0]=m;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var p=2;p<i;p++)s[p]=t[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9965:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return c},default:function(){return m}});var r=t(2122),a=t(9756),i=(t(7294),t(3905)),s=["components"],o={sidebar_position:11,title:"parseArgs"},l=void 0,p={unversionedId:"snippets/parseflags",id:"snippets/parseflags",isDocsHomePage:!1,title:"parseArgs",description:"This snippet provides a reusable template which you can add to your custom commands.",source:"@site/docs/snippets/parseflags.md",sourceDirName:"snippets",slug:"/snippets/parseflags",permalink:"/snippets/parseflags",editUrl:"https://github.com/yagpdb-cc/yagpdb-cc/edit/master/website/docs/snippets/parseflags.md",version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11,title:"parseArgs"},sidebar:"tutorialSidebar",previous:{title:"Username Color",permalink:"/snippets/usernamecolor"},next:{title:"Suggestion Read Me",permalink:"/suggestion/suggestionREADME"}},c=[],u={toc:c};function m(e){var n=e.components,t=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This snippet provides a reusable template which you can add to your custom commands.",(0,i.kt)("br",{parentName:"p"}),"\n","It separates predefined flags from positional arguments within input; for example:\n",(0,i.kt)("inlineCode",{parentName:"p"},"-command -m 123 positional arg -f"),"\nmight be parsed into:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'```\npositional: ["positional" "arg"]\n  flags: map {\n    "m" => "123"\n    "f" => true\n  }\n  ```\n')),(0,i.kt)("p",null,"A more elaborate example is shown in the code below."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'{{/* The \'define\' block below is all you need to copy into your command; everything else is part of the example code.\' */}}\n{{define "parseFlags"}}\n    {{.Set "Out" (sdict\n        "Positional" (cslice)\n        "Flags" (dict)\n    )}}\n\n    {{$curFlag := ""}}\n    {{$lastIdx := sub (len .Args) 1}}\n    {{range $i, $arg := .Args}}\n        {{- if $curFlag}}\n            {{- $.Out.Flags.Set $curFlag $arg}}\n            {{- $curFlag = ""}}\n        {{- else if and ($id := $.Flags.Get $arg) (ne $i $lastIdx)}}\n            {{- $curFlag = $id}}\n        {{- else if $id := $.Switches.Get $arg}}\n            {{- $.Out.Flags.Set $id true}}\n        {{- else}}\n            {{- $.Out.Set "Positional" ($.Out.Positional.Append $arg)}}\n        {{- end -}}\n    {{end}}\n{{end}}\n\n{{/* Example usage, to parse a command similar in structure to the \'rolemenu create\' built-in command */}}\n\n{{$query := dict\n    "Flags" (dict\n        "-m" "MessageID"\n        "-msg" "MessageID"\n\n        "-skip" "Skip"\n        "-s" "Skip"\n    )\n\n    "Switches" (dict\n        "-nodm" "NoDM"\n        "-rr" "RemoveRole"\n    )\n\n    "Args" .CmdArgs\n}}\n{{template "parseFlags" $query}}\n\n{{/*\n    Access flags by their ID (the value in the map supplied to parseFlags).\n    The value will be nil if the user did not supply that flag; otherwise it will\n    be the argument directly after the flag. For example, $msgID would have the value "1"\n    if the input was "-m 1".\n*/}}\n{{$msgID := $query.Out.Flags.MessageID}}\n\n{{/*\n    Same thing for switches. In this case, the value will be nil if the user did not supply\n    that switch; otherwise it will be \'true\'.\n*/}}\n{{$nodm := $query.Out.Switches.NoDM}}\n\n{{/*\n    Finally, we can access any excess arguments that are neither flags nor switches by indexing\n    into the Positional slice. In this case, $first would have the value "a" if the input was\n    "a -nodm -m 123".\n*/}}\n{{$first := index $query.Out.Positional 0}}\n')))}m.isMDXComponent=!0}}]);