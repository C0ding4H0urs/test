"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5911],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),d=o,k=p["".concat(s,".").concat(d)]||p[d]||m[d]||i;return n?r.createElement(k,a(a({ref:t},c),{},{components:n})):r.createElement(k,a({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var u=2;u<i;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5648:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return a},default:function(){return m},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return u}});var r=n(3117),o=(n(7294),n(3905));const i={title:"Bookmark Message"},a=void 0,l={unversionedId:"utilities/bookmark",id:"utilities/bookmark",title:"Bookmark Message",description:"This command functions similar to the reminder command, but sends a DM instantly.",source:"@site/docs/utilities/bookmark.md",sourceDirName:"utilities",slug:"/utilities/bookmark",permalink:"/utilities/bookmark",draft:!1,editUrl:"https://github.com/yagpdb-cc/yagpdb-cc/edit/master/website/docs/utilities/bookmark.md",tags:[],version:"current",frontMatter:{title:"Bookmark Message"},sidebar:"sidebar",previous:{title:"Big Emoji v2",permalink:"/utilities/big-emoji-v2"},next:{title:"Custom Command to File",permalink:"/utilities/cc2file"}},s={},u=[{value:"Trigger",id:"trigger",level:2},{value:"Usage",id:"usage",level:2},{value:"Code",id:"code",level:2},{value:"Author",id:"author",level:2}],c={toc:u};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This command functions similar to the reminder command, but sends a DM instantly.\nAlternatively, one could see it as a private pin command."),(0,o.kt)("h2",{id:"trigger"},"Trigger"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"Regex"),(0,o.kt)("br",null),"\n",(0,o.kt)("strong",{parentName:"p"},"Trigger:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"\\A(?:-\\s?|<@!?204255221017214977>\\s*)b(?:ook)?m(?:ark)?(?:\\s+|\\z)"),(0,o.kt)("br",null)),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-bookmark <message>")," - Sends a nicely formatted note with the message provided in DM.")),(0,o.kt)("admonition",{title:"Aliases",type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Instead of ",(0,o.kt)("inlineCode",{parentName:"p"},"bookmark"),", you can also use ",(0,o.kt)("inlineCode",{parentName:"p"},"bm"),".")),(0,o.kt)("h2",{id:"code"},"Code"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-gotmpl",metastring:"file=../../../src/utilities/bookmark.go.tmpl",file:"../../../src/utilities/bookmark.go.tmpl"},'{{/*\n    Allows you to bookmark messages.\n    See <https://yagpdb-cc.github.io/utilities/bookmark> for more information.\n\n    Author: Luca Z. <https://github.com/l-zeuch>\n*/}}\n\n{{/* Actual Code - Only change this when you know what you are doing */}}\n{{$args := parseArgs 1 "```Bookmark <Message:Text>```\\nNot enough arguments passed." (carg "string" "Message")}}\n{{$note := $args.Get 0}}\n{{$link := (printf "https://discord.com/channels/%d/%d/%d" .Guild.ID .Channel.ID .Message.ID)}}\n{{$embed := (cembed\n    "title" "Bookmark"\n    "description" "You asked me to bookmark this for you:"\n    "fields" (cslice\n        (sdict "name" "Note" "value" (print $note) "inline" true)\n        (sdict "name" "Info" "value" (printf "Channel: <#%d>\\nSource: [Jump!](%s)"  .Channel.ID $link) "inline" true)\n    )\n)}}\n{{sendDM $embed}}\n{{addReactions "\ud83d\udceb"}}\n')),(0,o.kt)("h2",{id:"author"},"Author"),(0,o.kt)("p",null,"This custom command was written by ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/l-zeuch"},"@l-zeuch"),"."))}m.isMDXComponent=!0}}]);