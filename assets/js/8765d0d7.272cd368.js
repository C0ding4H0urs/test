"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4130],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var i=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,i,l=function(e,n){if(null==e)return{};var t,i,l={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var o=i.createContext({}),u=function(e){var n=i.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=u(e.components);return i.createElement(o.Provider,{value:n},e.children)},g="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},p=i.forwardRef((function(e,n){var t=e.components,l=e.mdxType,r=e.originalType,o=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),g=u(t),p=l,m=g["".concat(o,".").concat(p)]||g[p]||d[p]||r;return t?i.createElement(m,s(s({ref:n},c),{},{components:t})):i.createElement(m,s({ref:n},c))}));function m(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=t.length,s=new Array(r);s[0]=p;var a={};for(var o in n)hasOwnProperty.call(n,o)&&(a[o]=n[o]);a.originalType=e,a[g]="string"==typeof e?e:l,s[1]=a;for(var u=2;u<r;u++)s[u]=t[u];return i.createElement.apply(null,s)}return i.createElement.apply(null,t)}p.displayName="MDXCreateElement"},8864:function(e,n,t){t.r(n),t.d(n,{assets:function(){return o},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return r},metadata:function(){return a},toc:function(){return u}});var i=t(3117),l=(t(7294),t(3905));const r={title:"Configure Settings"},s=void 0,a={unversionedId:"leveling/configure-settings",id:"leveling/configure-settings",title:"Configure Settings",description:"This command allows administrators to configure general leveling settings.",source:"@site/docs/leveling/configure-settings.md",sourceDirName:"leveling",slug:"/leveling/configure-settings",permalink:"/leveling/configure-settings",draft:!1,editUrl:"https://github.com/yagpdb-cc/yagpdb-cc/edit/master/website/docs/leveling/configure-settings.md",tags:[],version:"current",frontMatter:{title:"Configure Settings"},sidebar:"sidebar",previous:{title:"Configure Role Rewards",permalink:"/leveling/configure-role-rewards"},next:{title:"Message Handler",permalink:"/leveling/message-handler"}},o={},u=[{value:"Trigger",id:"trigger",level:2},{value:"Usage",id:"usage",level:2},{value:"Code",id:"code",level:2},{value:"Author",id:"author",level:2}],c={toc:u},g="wrapper";function d(e){let{components:n,...t}=e;return(0,l.kt)(g,(0,i.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"This command allows administrators to configure general leveling settings."),(0,l.kt)("h2",{id:"trigger"},"Trigger"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Type:")," ",(0,l.kt)("inlineCode",{parentName:"p"},"Regex"),(0,l.kt)("br",null),"\n",(0,l.kt)("strong",{parentName:"p"},"Trigger:")," ",(0,l.kt)("inlineCode",{parentName:"p"},"\\A(-|<@!?204255221017214977>\\s*)(leveling|(level|lvl)-?conf|(level|lvl)-?settings)(\\s+|\\z)")),(0,l.kt)("admonition",{type:"caution"},(0,l.kt)("p",{parentName:"admonition"},"Unless you would like everyone to be able to configure general leveling settings, we advise that you restrict this command to a staff role in the role restrictions.")),(0,l.kt)("h2",{id:"usage"},"Usage"),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"You can view a similar help message to the following in Discord by running ",(0,l.kt)("inlineCode",{parentName:"p"},"-leveling")," with no arguments.")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-leveling set cooldown <duration>")," - Sets the cooldown between giving messages."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-leveling set min <num>")," - Sets the lower bound of the range of experience that can be given when a user sends a message."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-leveling set max <num>")," - Sets the upper bound of the range of experience that can be given when a user sends a message."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-leveling set-channel <channel|'none'>")," - Sets the channel where level-up announcements will be sent. The default is to send it in the channel where the user leveled up, but you can also set it to a fixed channel by providing a channel. To use the default of the channel where the user leveled up, use ",(0,l.kt)("inlineCode",{parentName:"li"},"none")," as the channel."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-leveling set-announcements <bool>")," - Sets whether level-up announcements should be sent."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-leveling view")," - Views the current leveling settings.")),(0,l.kt)("admonition",{title:"Aliases",type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Instead of using ",(0,l.kt)("inlineCode",{parentName:"p"},"leveling"),", you can also use ",(0,l.kt)("inlineCode",{parentName:"p"},"levelconf"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"lvlconf"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"level-conf,")," ",(0,l.kt)("inlineCode",{parentName:"p"},"lvl-conf"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"levelsettings"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"lvlsettings"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"level-settings"),", or ",(0,l.kt)("inlineCode",{parentName:"p"},"lvl-settings"),".")),(0,l.kt)("h2",{id:"code"},"Code"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-gotmpl",metastring:"file=../../../src/leveling/leveling.go.tmpl",file:"../../../src/leveling/leveling.go.tmpl"},'{{/*\n    Manages the general leveling settings for the server.\n    See <https://yagpdb-cc.github.io/leveling/configure-settings> for more information.\n\n    Author: jo3-l <https://github.com/jo3-l>\n*/}}\n\n{{/* Help message for convenience in sending */}}\n{{ $helpMsg := cembed\n    "title" "\ud83c\udfc6 Leveling"\n    "description" (joinStr "\\n\\n"\n        "`leveling use-default`: Use the default settings"\n        "`leveling set <key> <value>`: Sets the given settings to the value provided. Valid keys are \\"min\\", \\"max\\", and \\"cooldown\\" (duration)."\n        "`leveling set-channel <channel|none>`: Sets the channel where level up messages will be sent (defaults to current channel). If you want to make it the current channel, use `leveling set-channel none`."\n            "`leveling set-announcements`: Sets if you want to display the level up messages."\n        "`leveling view`: Views the current settings."\n    )\n    "color" 14232643\n}}\n{{ if .CmdArgs }}\n    {{ $isSaved := false }} {{/* Whether the settings are saved */}}\n    {{ $currentSettings := sdict\n        "min" 15\n        "max" 25\n        "cooldown" .TimeMinute\n            "announcements" true\n    }} {{/* Defaults for level settings */}}\n    {{ with (dbGet 0 "xpSettings") }}\n        {{ $isSaved = true }} {{/* Settings are in DB */}}\n        {{ $currentSettings = sdict .Value }} {{/* Convert value to sdict */}}\n    {{ end }}\n\n    {{ if eq (index .CmdArgs 0) "use-default" }}\n        {{ $s := dbSet 0 "xpSettings" $currentSettings }} {{/* Set defaults */}}\n        Done! You are now using the default settings for the leveling system.\n\n    {{ else if and (eq (index .CmdArgs 0) "set") (ge (len .CmdArgs) 3) }}\n        {{ $key := index .CmdArgs 1 }} {{/* The key of the setting being set */}}\n        {{ $value := slice .CmdArgs 2 | joinStr " " }} {{/* The value of the new setting */}}\n        {{ if in (cslice "min" "max" "cooldown") $key }} {{/* Check that key is valid */}}\n            {{ $parsed := or (and (eq $key "cooldown") (toDuration $value)) (toInt $value) }} {{/* Find the proper type of conversion needed */}}\n            {{ if not $parsed }} {{/* Check whether it was parsed correctly / whether it was valid value */}}\n                Please provide a valid value for the key `{{ $key }}`.\n            {{ else }}\n                {{ $currentSettings.Set $key $parsed }} {{/* Set key to value */}}\n                {{ if ge $currentSettings.min $currentSettings.max }} {{/* Preemptively prevent user from setting larger min value than max which would cause error later */}}\n                    The minimum xp cannot be larger than or equal to the max xp.\n                {{ else }}\n                    {{ $s := dbSet 0 "xpSettings" $currentSettings }} {{/* Save it */}}\n                    Successfully set the key `{{ $key }}` to `{{ $value }}`!\n                {{ end }}\n            {{ end }}\n        {{ else }}\n            That was not a valid key. The only valid settings are "min", "max", and "cooldown".\n        {{ end }}\n\n    {{ else if and (eq (index .CmdArgs 0) "set-channel") (ge (len .CmdArgs) 2) }}\n        {{ $input := index .CmdArgs 1 }}\n        {{ with reFindAllSubmatches `<#(\\d+)>` $input }} {{ $input = toInt64 (index . 0 1) }} {{ end }}\n        {{ $channel := .Guild.GetChannel $input }}\n        {{ if $channel }}\n            {{ $currentSettings.Set "channel" $channel.ID }}\n            {{ $s := dbSet 0 "xpSettings" $currentSettings }}\n            Successfully set channel to <#{{ $channel.ID }}>!\n        {{ else if eq $input "none" }}\n            {{ $currentSettings.Del "channel" }}\n            {{ $s := dbSet 0 "xpSettings" $currentSettings }}\n            Successfully set the channel for level up notifications to none.\n        {{ else }}\n            That was not a valid channel. Try again.\n        {{ end }}\n\n    {{ else if eq (index .CmdArgs 0) "set-announcements" }}\n        {{ $input := index .CmdArgs 1 | lower }}\n        {{ if eq $input "true" "y" }}\n            {{ $currentSettings.Set "announcements" true }}\n            Successfully set the value for announcements to `true`\n            {{ dbSet 0 "xpSettings" $currentSettings }}\n        {{ else if eq $input "false" "n" }}\n            {{ $currentSettings.Set "announcements" false }}\n            Successfully set the value for announcements to `false`\n            {{ dbSet 0 "xpSettings" $currentSettings }}\n        {{ else }}\n            That was not a valid option. The only valid options are "true" and "false".\n        {{ end }}\n\n    {{ else if eq (index .CmdArgs 0) "view" }}\n        {{ $channel := "*None set*" }}\n        {{ with $currentSettings.channel }} {{ $channel = printf "<#%d>" . }} {{ end }}\n        {{ $formatted := printf "**\u276f Minimum XP:** %d\\n**\u276f Maximum XP:** %d\\n**\u276f Cooldown:** %s\\n**\u276f Level-up Channel:** %s\\n**\u276f Announcements:** %v\\n"\n            $currentSettings.min\n            $currentSettings.max\n            (humanizeDurationSeconds ($currentSettings.cooldown | toDuration))\n            $channel\n            $currentSettings.announcements\n        }} {{/* Construct the embed description */}}\n        {{ if $isSaved }} {{/* If the settings are in DB */}}\n            {{ sendMessage nil (cembed "title" "Level Settings" "description" $formatted "thumbnail" (sdict "url" "https://i.imgur.com/mJ7zu6k.png")) }}\n        {{ else }}\n            This server has not set up the leveling system. Run `-leveling use-default` to use the default settings or customize it using `-leveling set <key> <value>`.\n        {{ end }}\n    {{ else }} {{/* Send help messages */}}\n        {{ sendMessage nil $helpMsg }}\n    {{ end }}\n{{ else }}\n    {{ sendMessage nil $helpMsg }}\n{{ end }}\n')),(0,l.kt)("h2",{id:"author"},"Author"),(0,l.kt)("p",null,"This custom command was written by ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/jo3-l"},"@jo3-l"),"."))}d.isMDXComponent=!0}}]);