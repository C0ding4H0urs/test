(self.webpackChunkyagpdb_cc_website=self.webpackChunkyagpdb_cc_website||[]).push([[9172],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return m},kt:function(){return g}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=a.createContext({}),o=function(e){var n=a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},m=function(e){var n=o(e.components);return a.createElement(d.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,d=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),p=o(t),g=r,u=p["".concat(d,".").concat(g)]||p[g]||l[g]||s;return t?a.createElement(u,c(c({ref:n},m),{},{components:t})):a.createElement(u,c({ref:n},m))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,c=new Array(s);c[0]=p;var i={};for(var d in n)hasOwnProperty.call(n,d)&&(i[d]=n[d]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var o=2;o<s;o++)c[o]=t[o];return a.createElement.apply(null,c)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},4259:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return c},metadata:function(){return i},toc:function(){return d},default:function(){return m}});var a=t(2122),r=t(9756),s=(t(7294),t(3905)),c={sidebar_position:6,title:"Deathmatch"},i={unversionedId:"funccs/deathmatch",id:"funccs/deathmatch",isDocsHomePage:!1,title:"Deathmatch",description:"This command is a replica of the deathmatch command from Yggdrasil.",source:"@site/docs/funccs/deathmatch.md",sourceDirName:"funccs",slug:"/funccs/deathmatch",permalink:"/funccs/deathmatch",editUrl:"https://github.com/yagpdb-cc/yagpdb-cc/edit/master/yagpdb-cc-website/docs/funccs/deathmatch.md",version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,title:"Deathmatch"},sidebar:"tutorialSidebar",previous:{title:"Counting",permalink:"/funccs/counting"},next:{title:"Duck",permalink:"/funccs/duck"}},d=[],o={toc:d};function m(e){var n=e.components,t=(0,r.Z)(e,["components"]);return(0,s.kt)("wrapper",(0,a.Z)({},o,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"This command is a replica of the deathmatch command from Yggdrasil."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Trigger Type:")," ",(0,s.kt)("inlineCode",{parentName:"p"},"Command")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Trigger:")," ",(0,s.kt)("inlineCode",{parentName:"p"},"deathmatch")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Usage:"),(0,s.kt)("br",{parentName:"p"}),"\n",(0,s.kt)("inlineCode",{parentName:"p"},"-deathmatch [user1] [user2]")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},'{/*\n    A replica of the deathmatch command from Yggdrasil.\n\n    Usage:\n      -deathmatch                 // play against YAG\n      -deathmatch player1         // play against another user\n      -deathmatch player1 player2 // make two players play against each other\n\n    Trigger:\n      Command type trigger \'deathmatch\'.\n*/}}\n\n{{/* CONFIGURATION VALUES START */}}\n\n{{/* A set of emojis to use for the deathmatch messages. Change this if you are selfhosting, otherwise, leave it alone. */}}\n{{$Emojis := cslice "<:battleForward:681735565594460181>" "<:battleBackwards:681735538105253901>"}}\n\n{{/* The default opponent. Change this if you are selfhosting, otherwise, leave it alone. */}}\n{{$YAG := userArg 204255221017214977}}\n\n{{/* Slice of channel IDs to use when executing the command. These can be chosen randomly. */}}\n{{$Channels := cslice ID1 ID2 ID3}}\n\n{{/* CONFIGURATION VALUES END */}}\n\n{{define "renderEmbed"}}\n    {{$player0 := index .GameData.Players 0}}\n    {{$player1 := index .GameData.Players 1}}\n    {{.Set "Out" (sdict\n        "title" "\ud83d\udca2 Deathmatch"\n        "description" (joinStr "\\n" .GameData.Msgs.StringSlice)\n        "color" 14232643\n        "fields" (cslice\n            (sdict "name" $player0.User.Username "value" (print $player0.HP "/100 HP") "inline" true)\n            (sdict "name" $player1.User.Username "value" (print $player1.HP "/100 HP") "inline" true)\n        )\n    )}}\n{{end}}\n\n{{if not .ExecData}}\n    {{$games := or (dbGet 0 "deathmatch_games").Value 0 | toInt}}\n    {{if gt $games 5}}\n        To prevent overloading YAGPDB, no more than 5 deathmatch games can be played in a server at any time.\n    {{else}}\n        {{$s := dbIncr 0 "deathmatch_games" 1}}\n        {{$args := parseArgs 0 "**Syntax:** `-deathmatch [player1] [player2]`"\n            (carg "member" "player-one")\n            (carg "member" "player-two")\n        }}\n        {{$players := cslice\n            (sdict "User" $YAG "HP" 100)\n            (sdict "User" .User "HP" 100)\n        }}\n        {{with $args.Get 0}} {{$players.Set 0 (sdict "User" .User "HP" 100)}} {{end}}\n        {{with $args.Get 1}} {{$players.Set 1 (sdict "User" .User "HP" 100)}} {{end}}\n\n        {{$gameData := dict\n            "Players" $players\n            "Round" 0\n            "Msgs" (cslice)\n            "ChannelID" .Channel.ID\n        }}\n\n        {{template "renderEmbed" ($query := dict "GameData" $gameData)}}\n        {{$embed := $query.Out}}\n        {{$embed.Set "description" "_Match starting in 3..._"}}\n\n        {{$id := sendMessageRetID nil (cembed $embed)}}\n        {{$gameData.Set "MsgID" $id}}\n\n        {{$c := index $Channels (randInt (len $Channels))}}\n        {{execCC .CCID $c 2 $gameData}}\n    {{end}}\n{{else}}\n    {{$gameData := .ExecData}}\n    {{$idx := mod $gameData.Round 2 | toInt}}\n\n    {{$attacker := index $gameData.Players $idx}}\n    {{$defender := index $gameData.Players (sub 1 $idx)}}\n\n    {{/* compute damage */}}\n    {{$p := randInt 100}}\n    {{$dmg := 0}}\n    {{if lt $p 5}} {{$dmg = randInt 40 50}}\n    {{else if lt $p 15}} {{$dmg = randInt 30 40}}\n    {{else if lt $p 45}} {{$dmg = randInt 20 30}}\n    {{else}} {{$dmg = randInt 1 20}}\n    {{end}}\n\n    {{/* clamp $dmg to defender\'s health so we don\'t get negative HP */}}\n    {{if gt $dmg $defender.HP}} {{$dmg = $defender.HP}} {{end}}\n    {{$defender.Set "HP" (sub $defender.HP $dmg)}}\n\n    {{$m := printf "%s **%s** attacked **%s**, dealing __%d__ damage!"\n        (index $Emojis $idx)\n        $attacker.User.Username\n        $defender.User.Username\n        $dmg\n    }}\n    {{$gameData.Set "Msgs" ($gameData.Msgs.Append $m)}}\n\n    {{if eq $defender.HP 0}}\n        {{$wm := print "\ud83c\udfc6 **" $attacker.User.Username "** has won!"}}\n        {{$gameData.Set "Msgs" ($gameData.Msgs.Append $wm)}}\n        {{$s := dbIncr 0 "deathmatch_games" -1}}\n    {{else}}\n        {{$gameData.Set "Round" (add $gameData.Round 1)}}\n        {{$c := index $Channels (randInt (len $Channels))}}\n        {{execCC .CCID $c 2 $gameData}}\n    {{end}}\n\n    {{/* update embed */}}\n    {{template "renderEmbed" ($query := dict "GameData" $gameData)}}\n    {{editMessage $gameData.ChannelID $gameData.MsgID (cembed $query.Out)}}\n{{end}}\n')))}m.isMDXComponent=!0}}]);