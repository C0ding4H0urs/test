(self.webpackChunkyagpdb_cc_website=self.webpackChunkyagpdb_cc_website||[]).push([[6408],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return c},kt:function(){return u}});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},s=Object.keys(e);for(o=0;o<s.length;o++)t=s[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)t=s[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=o.createContext({}),d=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=d(e.components);return o.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},p=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=d(t),u=r,g=p["".concat(l,".").concat(u)]||p[u]||m[u]||s;return t?o.createElement(g,a(a({ref:n},c),{},{components:t})):o.createElement(g,a({ref:n},c))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,a=new Array(s);a[0]=p;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,a[1]=i;for(var d=2;d<s;d++)a[d]=t[d];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}p.displayName="MDXCreateElement"},8458:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return a},metadata:function(){return i},toc:function(){return l},default:function(){return c}});var o=t(2122),r=t(9756),s=(t(7294),t(3905)),a={sidebar_position:5,title:"Slowmode"},i={unversionedId:"moderation/slowmode",id:"moderation/slowmode",isDocsHomePage:!1,title:"Slowmode",description:"This command adds slowmode functionality: It'll delete an user's message if their cooldown isn't over yet. Configurable permission requirement to bypass the cooldown, as well as required permission to invoke the slow mode.",source:"@site/docs/moderation/slowmode.md",sourceDirName:"moderation",slug:"/moderation/slowmode",permalink:"/yagpdb-cc/moderation/slowmode",editUrl:"https://github.com/yagpdb-cc/yagpdb-cc/edit/master/yagpdb-cc-website/docs/moderation/slowmode.md",version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"Slowmode"},sidebar:"tutorialSidebar",previous:{title:"Nickname Moderation",permalink:"/yagpdb-cc/moderation/nicknamemoderation"},next:{title:"Lockdown",permalink:"/yagpdb-cc/moderation/lockdown"}},l=[],d={toc:l};function c(e){var n=e.components,t=(0,r.Z)(e,["components"]);return(0,s.kt)("wrapper",(0,o.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"This command adds slowmode functionality: It'll delete an user's message if their cooldown isn't over yet. Configurable permission requirement to bypass the cooldown, as well as required permission to invoke the slow mode."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Trigger Type:")," ",(0,s.kt)("inlineCode",{parentName:"p"},"Regex")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Trigger:")," ",(0,s.kt)("inlineCode",{parentName:"p"},".*")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Usage:"),(0,s.kt)("br",{parentName:"p"}),"\n",(0,s.kt)("inlineCode",{parentName:"p"},"-slowmode on (time in seconds)"),(0,s.kt)("br",{parentName:"p"}),"\n",(0,s.kt)("inlineCode",{parentName:"p"},"-slowmode off")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},'{{/*\n    This command helps using a slowmode. it deletes a user\'s message if their slowmode isnt over people who you want can bypass slowmode as well as set it \n \n    Usage: "-slowmode on (time in seconds) / -slowmode off "\n\n    Trigger type: Regex\n    Recommended trigger: `.*`\n \n    Credits:\n    Sponge :D\n*/}}\n \n{{/* CONFIGURATION VALUES START */}}\n{{ $bypassperms := "ManageMessages" }}{{/* perms needed to bypass slowmode */}}\n{{ $usageperms := "ManageMessages" }}{{/* perms needed for slowmode commands */}}\n{{/* put in the permissions you want the use to have in order to use or bypass the command */}}\n{{/* available perms: Administrator, ManageServer, ReadMessages, SendMessages, SendTTSMessages, ManageMessages, EmbedLinks, AttachFiles, ReadMessageHistory, MentionEveryone, VoiceConnect, VoiceSpeak, VoiceMuteMembers, VoiceDeafenMembers, VoiceMoveMembers, VoiceUseVAD, ManageNicknames, ManageRoles, ManageWebhooks, ManageEmojis, CreateInstantInvite, KickMembers, BanMembers, ManageChannels, AddReactions, ViewAuditLogs  */}}\n{{/* CONFIGURATION VALUES END */}}\n \n{{/* ACTUAL CODE */}}\n{{ $viewperms := (split (index (split (exec "viewperms") "\\n") 2) ", ") }}\n{{ $usageaccess := in $viewperms $usageperms }}\n{{ $bypassaccess := in $viewperms $bypassperms }}\n{{ if $usageaccess }}\n{{ if $matches := reFindAllSubmatches `\\A-slowmode on (\\d+)` .Message.Content }}\n{{ $slowmodeduration := (index $matches 0 1) }}\n{{ with (dbGet 660 "channels").Value }}\n{{ $value := sdict . }}\n{{ $value.Set (str $.Channel.ID) (str $slowmodeduration) }}\n{{ dbSet 660 "channels" $value }}\n{{ else }}\n{{ dbSet 660 "channels" (sdict (str $.Channel.ID) (str $slowmodeduration)) }}\n{{ end }}\ndone! slowmode has been set to `{{ $slowmodeduration }}s`\n{{ else if reFind `\\A-slowmode off` .Message.Content }}\n{{ if $db := (dbGet 660 "channels").Value }}\n{{ $value := sdict $db }}\n{{ $value.Del (str $.Channel.ID) }}\n{{ dbSet 660 "channels" $value }}\n{{ end }}\nthe slowmode has been removed from this channel\n{{ end }}\n{{ end }}\n{{ if not $bypassaccess }}\n{{ if $db := (dbGet 660 "channels").Value }}\n{{ $value := sdict $db }}\n{{ $get := $value.Get (str .Channel.ID) }}\n{{ if $get }}\n{{ if $slowmode := dbGet .User.ID (str .Channel.ID) }}\n{{ deleteTrigger 0 }}\n{{ else }}\n{{ dbSetExpire .User.ID (str .Channel.ID) "epic" (toInt $get) }}\n{{ end }}\n{{ end }}\n{{ end }}\n{{ end }}\n')))}c.isMDXComponent=!0}}]);