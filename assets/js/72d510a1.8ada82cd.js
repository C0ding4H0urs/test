(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3958],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return l},kt:function(){return u}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},l=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,l=d(e,["components","mdxType","originalType","parentName"]),m=s(t),u=i,g=m["".concat(c,".").concat(u)]||m[u]||p[u]||a;return t?r.createElement(g,o(o({ref:n},l),{},{components:t})):r.createElement(g,o({ref:n},l))}));function u(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=m;var d={};for(var c in n)hasOwnProperty.call(n,c)&&(d[c]=n[c]);d.originalType=e,d.mdxType="string"==typeof e?e:i,o[1]=d;for(var s=2;s<a;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},177:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return d},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return l},default:function(){return m}});var r=t(2122),i=t(9756),a=(t(7294),t(3905)),o=["components"],d={sidebar_position:2,title:"Configure System"},c=void 0,s={unversionedId:"moderation/raid-guard/configure-system",id:"moderation/raid-guard/configure-system",isDocsHomePage:!1,title:"Configure System",description:"This part of the code provides the Admin commands.",source:"@site/docs/moderation/raid-guard/configure-system.md",sourceDirName:"moderation/raid-guard",slug:"/moderation/raid-guard/configure-system",permalink:"/moderation/raid-guard/configure-system",editUrl:"https://github.com/yagpdb-cc/yagpdb-cc/edit/master/website/docs/moderation/raid-guard/configure-system.md",version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Configure System"},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/moderation/raid-guard/overview"},next:{title:"Join Trigger",permalink:"/moderation/raid-guard/join-trigger"}},l=[],p={toc:l};function m(e){var n=e.components,t=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This part of the code provides the Admin commands."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Trigger Type:")," ",(0,a.kt)("inlineCode",{parentName:"p"},"Command")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Trigger:")," ",(0,a.kt)("inlineCode",{parentName:"p"},"raid")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Usage:"),(0,a.kt)("br",{parentName:"p"}),"\n","All commands are preceeded by ",(0,a.kt)("inlineCode",{parentName:"p"},"-raid <action>"),(0,a.kt)("br",{parentName:"p"}),"\n","Actions include: ",(0,a.kt)("inlineCode",{parentName:"p"},"ban"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"kick"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"clear")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'{{/*\n    Trigger Type: Command\n    Trigger: `raid`\n\n    About: This part of the code provides the Admin commands. All commands are preceeded by `-raid <action>` Actions include: `ban`, `kick`, `clear`\n\n    Created by: ENGINEER15 - https://github.com/engineer152/\n    Last Update: 4/13/2021\n*/}}\n\n{{$t := "" }}\n{{$cc := toInt .CCID }}\n{{$l := cslice}}\n{{$thumb := (sdict "url" "https://cdn.discordapp.com/emojis/714051544265392229.gif")}}\n{{$qlen := 0}}\n\n{{$q:=cslice}}\n{{with (dbGet 0 "raidlist").Value}}\n    {{$q =$q.AppendSlice .}}{{end}}\n{{$nq:=cslice}}\n{{range $i,$e:=$q}}\n    {{if $i}}\n        {{$nq =$nq.Append $e}}\n    {{end}}\n{{end}}\n\n{{with .CmdArgs}}\n    {{$t = index . 0}}{{end}}\n{{with (dbGet 0 "raidlist").Value}}\n    {{$l = $l.AppendSlice . }}{{end}}\n{{$qlen = len $l}}\n\n{{$embed := sdict\n    "title" " \ud83d\udee1 RAID GUARD"\n    "description" "*Initializing in 3...*"\n    "color" 14232643\n    "thumbnail" $thumb }}\n\n{{$channel := .Channel.ID }}\n{{$user := "" }}\n\n{{with .ExecData }}\n    {{$embed = sdict .Embed }}\n    {{$qlen = .Qlen }}\n    {{$data := sdict . }}\n    {{$thumb := "" }}\n    {{$command := .Command}}\n    {{ $msgs := split $embed.description "\\n" | cslice.AppendSlice }}\n    {{$title := split $embed.title "\\n" | cslice.AppendSlice }}\n    {{$msgs = cslice }}{{ $title = cslice }}\n    {{if $q}}\n        {{with (index $q 0) }}\n            {{$user = . }}{{end}}\n        {{if eq $command "kick"}}\n            {{$k := execAdmin (printf "kick %d For being part of a RAID" $user.ID ) }}\n        {{else if eq $command "ban"}}\n            {{$k := execAdmin (printf "ban %d For being part of a RAID" $user.ID ) }}\n        {{end}}\n        {{if not (eq (len $nq) 0) }}\n            {{$title = $title.Append (print "\ud83d\udc62 REMOVING ALL RAID MEMBERS" )}}\n            {{$msgs = $msgs.Append (printf "Currently Removing: %s" $user.Username )}}\n            {{$thumb = (sdict "url" "https://cdn.discordapp.com/emojis/714051544265392229.gif")}}\n            {{dbSet 0 "raidlist" $nq}}\n            {{execCC $cc $channel 2 $data }}\n        {{else}}\n            {{$title = $title.Append (print "**\u2705 COMPLETE**" )}}\n            {{$msgs = $msgs.Append (printf "ALL %d RAIDERS HAVE BEEN REMOVED.\\nYour server has been protected by**\ud83d\udee1 RAID GUARD.**" $qlen )}}\n            {{$thumb = (sdict "url" "https://cdn.discordapp.com/emojis/565142262401728512.png")}}\n            {{dbDel 0 "raidlist"}}\n        {{end}}\n    {{else}}\n        {{$thumb = (sdict "url" "https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/twitter/281/person-shrugging_1f937.png")}}\n        {{$title = $title.Append (print "\\n" )}}\n        {{$msgs = $msgs.Append (print "\u274c THE RAIDLIST IS EMPTY\\n\\nNo RAID has happened recently. \ud83d\udc4d" )}}\n    {{end}}\n    {{$embed.Set "title" (joinStr "\\n" $title.StringSlice ) }}\n    {{$embed.Set "description" (joinStr "\\n" $msgs.StringSlice ) }}\n    {{$embed.Set "thumbnail" $thumb }}\n    {{$data.Set "Embed" $embed }}\n    {{editMessage .ChannelID .MsgID (cembed $embed) }}\n\n{{else}}\n\n    {{if eq $t "clear"}}\n        {{dbDel 0 "raidlist"}}\n        {{$embed2 := sdict\n            "title" "\u2705 COMPLETE"\n            "description" "\ud83e\uddf9 RAID LIST HAS NOW BEEN CLEARED"\n            "color" 14232643 }}\n        {{sendMessage nil (cembed $embed2) }}\n    {{else if or (eq $t "kick") (eq $t "ban")}}\n        {{$initial := sendMessageRetID nil (cembed $embed) }}\n        {{sleep 3 }}\n        {{execCC $cc (.Channel.ID) 0 (sdict\n            "Embed" $embed\n            "MsgID" $initial\n            "ChannelID" .Channel.ID\n            "Qlen" $qlen\n            "Command" $t)}}\n    {{end}}{{end}}\n')))}m.isMDXComponent=!0}}]);