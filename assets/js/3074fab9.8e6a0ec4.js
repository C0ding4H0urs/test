(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6566],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return g}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=l(n),g=i,d=m["".concat(c,".").concat(g)]||m[g]||p[g]||a;return n?r.createElement(d,o(o({ref:t},u),{},{components:n})):r.createElement(d,o({ref:t},u))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var l=2;l<a;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},500:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return m}});var r=n(2122),i=n(9756),a=(n(7294),n(3905)),o=["components"],s={sidebar_position:7,title:"Flag Message"},c=void 0,l={unversionedId:"utilities/flagmessage",id:"utilities/flagmessage",isDocsHomePage:!1,title:"Flag Message",description:"This command allows users to flag messages by reacting with a custom emoji.",source:"@site/docs/utilities/flagmessage.md",sourceDirName:"utilities",slug:"/utilities/flagmessage",permalink:"/utilities/flagmessage",editUrl:"https://github.com/yagpdb-cc/yagpdb-cc/edit/master/website/docs/utilities/flagmessage.md",version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,title:"Flag Message"},sidebar:"tutorialSidebar",previous:{title:"Edit",permalink:"/utilities/edit"},next:{title:"Ghost-Ping v1",permalink:"/utilities/ghostpingv1"}},u=[],p={toc:u};function m(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This command allows users to flag messages by reacting with a custom emoji."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Trigger Type:")," ",(0,a.kt)("inlineCode",{parentName:"p"},"Reaction")," on ",(0,a.kt)("inlineCode",{parentName:"p"},"Reaction Added only"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'{{/*\n    This command allows users to flag messages by reacting with a custom emoji.\n\n    Recommended trigger: Reaction trigger on REACTION ADD only.\n*/}}\n\n{{/* CONFIGURATION VARIABLES START */}}\n{{ $reportEmoji := 675512907391434759 }} {{/* ID of report emoji */}}\n{{ $reportChannel := 675513854888771595 }}\n{{/* CONFIGURATION VARIABLES END */}}\n\n{{ if eq .Reaction.Emoji.ID $reportEmoji }}\n    {{ $isFirst := true }}\n    {{ range .ReactionMessage.Reactions }}\n        {{- if and (eq .Emoji.ID $reportEmoji) (gt .Count 1) }} {{- $isFirst = false }} {{- end -}}\n    {{ end }}\n    {{ if $isFirst }}\n        {{ $attachment := "" }}\n        {{ with .ReactionMessage.Attachments }} {{ $attachment = (index . 0).ProxyURL }} {{ end }}\n        {{ sendMessage $reportChannel (cembed\n            "title" (printf "\u276f Message was flagged in #%s" .Channel.Name)\n            "color" 0xDC143C\n            "description" (or .ReactionMessage.Content "*No content*")\n            "image" (sdict "url" $attachment)\n            "fields" (cslice\n                (sdict "name" "\u276f Flagged by" "value" .User.String "inline" true)\n                (sdict "name" "\u276f Message Author" "value" .ReactionMessage.Author.String "inline" true)\n                (sdict "name" "\u276f Message" "value" (printf "[Jump to](https://discordapp.com/channels/%d/%d/%d)" .Guild.ID .Channel.ID .ReactionMessage.ID) "inline" true)\n                (sdict "name" "\u276f Logs" "value" (printf "[View here](%s)" (execAdmin "log")) "inline" true)\n            )\n            "footer" (sdict "text" "Flagged at")\n            "timestamp" currentTime\n        ) }}\n    {{ end }}\n    {{ deleteMessageReaction nil .ReactionMessage.ID .User.ID (printf "%s:%d" .Reaction.Emoji.Name $reportEmoji) }}\n{{ end }}\n')))}m.isMDXComponent=!0}}]);