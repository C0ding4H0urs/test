(self.webpackChunkyagpdb_cc_website=self.webpackChunkyagpdb_cc_website||[]).push([[2622],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return u},kt:function(){return $}});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=o.createContext({}),l=function(e){var n=o.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=l(e.components);return o.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=l(t),$=r,p=m["".concat(c,".").concat($)]||m[$]||d[$]||i;return t?o.createElement(p,a(a({ref:n},u),{},{components:t})):o.createElement(p,a({ref:n},u))}));function $(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,a=new Array(i);a[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var l=2;l<i;l++)a[l]=t[l];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},4358:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return m}});var o=t(2122),r=t(9756),i=(t(7294),t(3905)),a=["components"],s={sidebar_position:15,title:"Slot Machine"},c=void 0,l={unversionedId:"funccs/slotmachine",id:"funccs/slotmachine",isDocsHomePage:!1,title:"Slot Machine",description:"Slot machine game by Pedro Pessoa. Gambling can be addictive.",source:"@site/docs/funccs/slotmachine.md",sourceDirName:"funccs",slug:"/funccs/slotmachine",permalink:"/funccs/slotmachine",editUrl:"https://github.com/yagpdb-cc/yagpdb-cc/edit/master/yagpdb-cc-website/docs/funccs/slotmachine.md",version:"current",sidebarPosition:15,frontMatter:{sidebar_position:15,title:"Slot Machine"},sidebar:"tutorialSidebar",previous:{title:"Repeat",permalink:"/funccs/repeat"},next:{title:"Starboard V1",permalink:"/funccs/starboardv1"}},u=[],d={toc:u};function m(e){var n=e.components,t=(0,r.Z)(e,a);return(0,i.kt)("wrapper",(0,o.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Slot machine game by Pedro Pessoa. Gambling can be addictive. "),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Trigger Type:")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Command")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Trigger:")," ",(0,i.kt)("inlineCode",{parentName:"p"},"slotmachine")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Usage:"),(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("inlineCode",{parentName:"p"},"-slotmachine <amount>")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'{{/*\n    Slot machine game by Pedro Pessoa. Usage: `-slotmachine <amount>`.\n    Recommended trigger: Command trigger with trigger `slots`.\n*/}}\n\n{{/* CONFIGURATION VARIABLES */}}\n{{ $dbName := "CREDITS" }} {{/* Name of the Key of your DB that stores users currency ammount */}}\n{{ $gameName := "Slot Machine" }} {{/* Whatever you want the game to be named */}}\n{{ $user := "User" }} {{/* How should the user be called. For example: "player" or "user" */}}\n{{ $spinName := "SPINNING" }} {{/* Word to show user that slot machine is currently spinning */}}\n{{ $lose := "You lost :(" }} {{/* Text to tell user he lost */}}\n{{ $win := "YOU WON!" }} {{/* Text to tell user he won */}}\n{{ $profit := "Profit" }} {{/* How should the profit be called */}}\n{{ $currency := "Credits" }} {{/* Name of the currency in your server */}}\n{{ $payOut := "Pay Out" }} {{/* Name of the currency in your server */}}\n{{ $youHave := "you have " }} {{/* "You have" in your language */}}\n{{ $helper := "Usage" }} {{/* Helper text title */}}\n{{ $helpText := "-bet <amount>\\nFor example: **-bet 10**\\nThis way you would be betting 10 credits." }} {{/* Your helper text */}}\n{{ $notEnough := "Insuficient credits" }} {{/* Error msg when user doesnt have enough credits to place bet */}}\n{{ $betBelow1 := "You have to bet 1 credit at least" }} {{/* Error msg when user try to bet 0 */}}\n{{ $bettingChannel := 640790412986023949 }} {{/* Channel users can play */}}\n{{ $minMax := true }} {{/* Do you want to have a minimum and a maximum amount users can bet? true for yes / false for no */}}\n{{ $minBet := 100 }} {{/* Minimum amount people can bet */}}\n{{ $maxBet := 200 }} {{/* Maximum amount people can bet */}}\n{{ $outOfRange := "You have to bet between 100 and 200!" }} {{/* Error when user places a bet below or above the min/max bet. */}}\n{{ $channels := cslice\n    650881854722932746\n    663411278139883520\n    641092472423972864\n    642429118633213953\n    678827664135553044\n }} {{/* IDs of different channels in your server to prevent the game from lagging */}}\n{{/* CONFIGURATION VARIABLES END  */}}\n\n{{ $template := "**-------------------\\n %s | %s | %s |\\n-------------------\\n- %s -**" }}\n{{ $header := printf "%s | %s: %s" $gameName $user .User.Username }}\n{{ $slotEmoji := "<a:slotmoney:686445052284895237>" }}\n{{ $g := 65280 }}{{ $y := 16776960 }}{{ $r := 16711680 }}{{ $b := 65534 }}\n{{ $emojis := cslice "\ud83e\udd47" "\ud83e\udd47" "\ud83e\udd47" "\ud83e\udd47" "\ud83e\udd47" "\ud83e\udd47" "\ud83e\udd47"\n    "\ud83d\udc8e" "\ud83d\udc8e" "\ud83d\udc8e" "\ud83d\udc8e" "\ud83d\udc8e" "\ud83d\udc8e"\n    "\ud83d\udcaf" "\ud83d\udcaf" "\ud83d\udcaf" "\ud83d\udcaf"\n    "\ud83d\udcb5" "\ud83d\udcb5" "\ud83d\udcb5"\n    "\ud83d\udcb0" "\ud83d\udcb0" }}\n{{ $choosen := index (shuffle $emojis) 0 }}\n{{ $choosen2 := index (shuffle $emojis) 0 }}\n{{ $choosen3 := index (shuffle $emojis) 0 }}\n{{ $bal := toInt (dbGet .User.ID $dbName).Value }}\n{{ $embed := sdict\n    "color" $g\n    "fields" (cslice (sdict\n        "name" $header\n        "value" (printf $template $slotEmoji $slotEmoji $slotEmoji $spinName)\n        "inline" false\n    )) }}\n{{ if and (not .ExecData) (eq .Channel.ID $bettingChannel) (not (dbGet .User.ID "block_slot_123456")) }}\n    {{ if .CmdArgs }}\n        {{ $bet := toInt (index .CmdArgs 0) }}\n        {{ $ok := true }}\n        {{ if $minMax }}\n            {{ if or (lt $bet $minBet) (gt $bet $maxBet) }}\n                {{ $ok = false }}\n                {{ $outOfRange }}\n            {{ end }}\n        {{ end }}\n        {{ if $ok }}\n            {{ if ge $bet 1 }}\n                {{ if ge $bal $bet }}\n                    {{ dbSet .User.ID "block_slot_123456" true }}\n                    {{ $silent := dbIncr .User.ID $dbName (mult -1 $bet) }}\n                    {{ $id := sendMessageRetID nil (cembed $embed) }}\n                    {{ execCC .CCID (index (shuffle $channels) 0) 2 (sdict\n                        "depth" 1\n                        "id" $id\n                        "bet" $bet\n                    ) }}\n                {{ else }} {{ $notEnough }}, {{ .User.Mention }}! {{ end }}\n            {{ else }} {{ $betBelow1 }}, {{ .User.Mention }}! {{ end }}\n        {{ end }}\n    {{ else }}\n        {{ $embedHelp := cembed\n            "title" $gameName\n            "fields" (cslice\n                (sdict \n                    "name" $payOut \n                    "value" "**\ud83e\udd47\ud83e\udd47\u2753 - 1x\\n\ud83d\udc8e\ud83d\udc8e\u2753 - 2x\\n\ud83d\udcaf\ud83d\udcaf\u2753 - 3x\\n\ud83e\udd47\ud83e\udd47\ud83e\udd47 - 3x\\n\ud83d\udc8e\ud83d\udc8e\ud83d\udc8e - 4x\\n\ud83d\udcb5\ud83d\udcb5\u2753 - 4x\\n\ud83d\udcaf\ud83d\udcaf\ud83d\udcaf - 5x\\n\ud83d\udcb0\ud83d\udcb0\u2753 - 5x\\n\ud83d\udcb5\ud83d\udcb5\ud83d\udcb5 - 10x\\n\ud83d\udcb0\ud83d\udcb0\ud83d\udcb0 - 15x**"\n                    "inline" false\n                )\n                (sdict "name" $helper "value" $helpText "inline" false)\n            )\n            "color" $y\n        }}\n        {{ sendMessage nil $embedHelp }}\n    {{ end }}\n{{ end }}\n\n{{ with .ExecData }}\n    {{ if eq .depth 1 }}\n        {{ $embed.Set "fields" (cslice (sdict\n            "name" $header\n            "value" (printf $template $choosen $slotEmoji $slotEmoji $spinName)\n            "inline" false\n        )) }}\n        {{ editMessage $bettingChannel .id (cembed $embed) }}\n        {{ execCC $.CCID (index (shuffle $channels) 0) 1 (sdict\n            "depth" 2\n            "id" .id\n            "choosen" $choosen\n            "bet" .bet\n        ) }}\n    {{ else if eq .depth 2 }}\n        {{ $embed.Set "fields" (cslice\n            (sdict\n                "name" $header\n                "value" (printf $template .choosen $choosen2 $slotEmoji $spinName)\n                "inline" false\n            )\n        ) }}\n        {{ editMessage $bettingChannel .id (cembed $embed) }}\n        {{ execCC $.CCID (index (shuffle $channels) 0) 1 (sdict\n            "depth" 3\n            "id" .id\n            "choosen" .choosen\n            "choosen2" $choosen2\n            "bet" .bet\n        ) }}\n    {{ else if eq .depth 3 }}\n        {{ $announce := $lose }}\n        {{ $multiplier := 1 }}\n        {{ if (and (eq .choosen "\ud83d\udc8e") (eq .choosen2 "\ud83d\udc8e") (ne $choosen3 "\ud83d\udc8e")) }}\n            {{ $multiplier = 2 }}\n        {{ else if or (and (eq .choosen "\ud83e\udd47") (eq .choosen2 "\ud83e\udd47") (eq $choosen3 "\ud83e\udd47")) (and (eq .choosen "\ud83d\udcaf") (eq .choosen2 "\ud83d\udcaf") (ne $choosen3 "\ud83d\udcaf")) }}\n            {{ $multiplier = 3 }}\n        {{ else if or (and (eq .choosen "\ud83d\udc8e") (eq .choosen2 "\ud83d\udc8e") (eq $choosen3 "\ud83d\udc8e")) (and (eq .choosen "\ud83d\udcb5") (eq .choosen2 "\ud83d\udcb5") (ne $choosen3 "\ud83d\udcb5")) }}\n            {{ $multiplier = 4 }}\n        {{ else if or (and (eq .choosen "\ud83d\udcaf") (eq .choosen2 "\ud83d\udcaf") (eq $choosen3 "\ud83d\udcaf")) (and (eq .choosen "\ud83d\udcb0") (eq .choosen2 "\ud83d\udcb0") (ne $choosen3 "\ud83d\udcb0")) }}\n            {{ $multiplier = 5 }}\n        {{ else if and (eq .choosen "\ud83d\udcb5") (eq .choosen2 "\ud83d\udcb5") (eq $choosen3 "\ud83d\udcb5") }}\n            {{ $multiplier = 10 }}\n        {{ else if and (eq .choosen "\ud83d\udcb0") (eq .choosen2 "\ud83d\udcb0") (eq $choosen3 "\ud83d\udcb0") }}\n            {{ $multiplier = 15 }}\n        {{ end }}\n        {{ $pag1 := sdict "name" $profit "value" (joinStr "" "**-" .bet " " (lower $currency) "**") "inline" true }}\n        {{ $c := $r }}\n        {{ if eq .choosen .choosen2 }}\n            {{ $c = $b }}\n            {{ $announce = $win }}\n            {{ $pag1 = (sdict "name" $profit "value" (joinStr "" "**" (mult .bet $multiplier) " " (lower $currency) "**") "inline" true) }}\n            {{ $silent2 := dbIncr $.User.ID $dbName (mult .bet $multiplier) }}\n        {{ end }}\n        {{ $embed.Set "fields" (cslice\n            (sdict\n                "name" $header\n                "value" (printf $template .choosen .choosen2 $choosen3 $announce)\n                "inline" false\n            )\n        ) }}\n        {{ $embed.Set "color" $c }}\n        {{ $embed.Set "fields" ($embed.fields.Append $pag1) }}\n        {{ $saldo := toInt (dbGet $.User.ID $dbName).Value }}\n        {{ $pag2 := sdict\n            "name" $currency\n            "value" (joinStr "" $youHave " **" $saldo " " (lower $currency) "**")\n            "inline" true\n         }}\n        {{ $embed.Set "fields" ($embed.fields.Append $pag2) }}\n        {{ editMessage $bettingChannel .id (cembed $embed) }}\n        {{ dbDel $.User.ID "block_slot_123456" }}\n    {{ end }}\n{{ end }}\n')))}m.isMDXComponent=!0}}]);