(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7279],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return v}});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=d(n),v=l,m=c["".concat(s,".").concat(v)]||c[v]||u[v]||a;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function v(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,i=new Array(a);i[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var d=2;d<a;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},9909:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return p},default:function(){return c}});var r=n(2122),l=n(9756),a=(n(7294),n(3905)),i=["components"],o={title:"Set XP/Level"},s=void 0,d={unversionedId:"leveling/set-xp",id:"leveling/set-xp",isDocsHomePage:!1,title:"Set XP/Level",description:"This command allows administrators to set the experience or level of a user.",source:"@site/docs/leveling/set-xp.md",sourceDirName:"leveling",slug:"/leveling/set-xp",permalink:"/leveling/set-xp",editUrl:"https://github.com/yagpdb-cc/yagpdb-cc/edit/master/website/docs/leveling/set-xp.md",version:"current",frontMatter:{title:"Set XP/Level"},sidebar:"sidebar",previous:{title:"Reaction Handler",permalink:"/leveling/reaction-handler"},next:{title:"View Leaderboard",permalink:"/leveling/view-leaderboard"}},p=[{value:"Trigger",id:"trigger",children:[]},{value:"Usage",id:"usage",children:[]},{value:"Code",id:"code",children:[]},{value:"Author",id:"author",children:[]}],u={toc:p};function c(e){var t=e.components,n=(0,l.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This command allows administrators to set the experience or level of a user."),(0,a.kt)("h2",{id:"trigger"},"Trigger"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Type:")," ",(0,a.kt)("inlineCode",{parentName:"p"},"Regex"),(0,a.kt)("br",null),"\n",(0,a.kt)("strong",{parentName:"p"},"Trigger:")," ",(0,a.kt)("inlineCode",{parentName:"p"},"\\A(-|<@!?204255221017214977>\\s*)(set-?(xp|level))(\\s+|\\z)")),(0,a.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Unless you would like everyone to be able to set experience/level, we advise that you restrict this command to a staff role in the role restrictions."))),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-setxp <user> <xp>")," - Sets the experience of the user provided."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-setlevel <user> <level>")," - Sets the level of the user provided.")),(0,a.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Aliases")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Instead of using ",(0,a.kt)("inlineCode",{parentName:"p"},"setxp"),", you can also use ",(0,a.kt)("inlineCode",{parentName:"p"},"set-xp"),". Similarly, in place of ",(0,a.kt)("inlineCode",{parentName:"p"},"setlevel"),", you can also use ",(0,a.kt)("inlineCode",{parentName:"p"},"set-level"),"."))),(0,a.kt)("h2",{id:"code"},"Code"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-gotmpl",metastring:"file=../../../src/leveling/set_xp.go.tmpl",file:"../../../src/leveling/set_xp.go.tmpl"},'{{/*\n    Sets the XP or level of user.\n    See <https://yagpdb-cc.github.io/leveling/set-xp> for more information.\n\n    Author: jo3-l <https://github.com/jo3-l>\n*/}}\n\n{{ $cmd := reFind `(?i)xp|level` .Cmd }} {{/* The type of command used */}}\n{{ $user := 0 }} {{/* Target user */}}\n{{ $newLvl := 0 }} {{/* Whether user leveled up with these changes */}}\n{{ with .CmdArgs }} {{ $user = index . 0 | userArg }} {{ end }} {{/* We try to resolve user from arguments given */}}\n{{ if and (eq $cmd "level") (eq (len .CmdArgs) 2) }}\n    {{ $level := $.nil }}\n    {{ $valid := false }}\n    {{ with reFind `\\A\\d+\\z` (index .CmdArgs 1) }} {{ $valid = true }} {{ $level = toInt . }} {{ end }}\n    {{ if and $valid $user }}\n        {{ $calculated := mult 100 (mult $level $level) }} {{/* Calculate XP for this level */}}\n        {{ $s := dbSet $user.ID "xp" $calculated }} {{/* Update db */}}\n        {{ $newLvl = $level }} {{/* As user leveled up, we change newLvl */}}\n        {{ printf "Successfully set **%s**\'s level to %d!" $user.String $level }}\n    {{ else }}\n        The syntax for this command is `-setlevel <user> <level>`. \n    {{ end }}\n{{ else if eq (len .CmdArgs) 2 }}\n    {{ $xp := $.nil }}\n    {{ $valid := false }}\n    {{ with reFind `\\A\\d+\\z` (index .CmdArgs 1) }} {{ $valid = true }} {{ $xp = toInt . }} {{ end }}\n    {{ if and $valid $user }}\n        {{ $oldXp := 0 }} {{/* Old XP */}}\n        {{ with (dbGet $user.ID "xp") }} {{ $oldXp = .Value }} {{ end }} {{/* Update old xp with db entry */}}\n        {{ $oldLvl := roundFloor (mult 0.1 (sqrt $oldXp)) }} {{/* Calculate old level */}}\n        {{ $s := dbSet $user.ID "xp" $xp }} {{/* Silence the dbSet */}}\n        {{ $updatedLvl := roundFloor (mult 0.1 (sqrt $xp)) }} {{/* Calculate updated level */}}\n        {{ if ne $oldLvl $updatedLvl }} {{ $newLvl = $updatedLvl }} {{ end }} {{/* If level was updated, update newLvl */}}\n        {{ printf "Successfully set **%s**\'s XP to %d!" $user.String $xp }}\n    {{ else }}\n        The syntax for this command is `-setxp <user> <xp>`.\n    {{ end }}\n{{ else }}\n    The syntax for this command is `-setxp/setlevel <user> <level|xp>`.\n{{ end }}\n{{/* Handle leveling up | Basically the same as whats in the message listener, so if you are curious look at that */}}\n{{ if $newLvl }}\n    {{ $roleRewards := sdict "type" "stack" }}\n    {{ with dbGet 0 "roleRewards" }} {{ $roleRewards = sdict .Value }} {{ end }}\n    {{ $type := $roleRewards.type }}\n    {{ $toAdd := 0 }}\n    {{ $dist := -1 }}\n    {{ range $level, $reward := $roleRewards }}\n        {{- if and (le (toInt $level) (toInt $newLvl)) (or (gt $dist (sub (toInt $newLvl) (toInt $level))) (eq $dist -1)) (eq $type "highest") }}\n            {{- $dist = sub (toInt $newLvl) (toInt $level) }} {{- $toAdd = $reward }}\n        {{- end }}\n        {{- if and (ge (toInt $newLvl) (toInt $level)) (not (targetHasRoleID $user $reward)) (eq $type "stack") (ne $level "type") }} {{- giveRoleID $user $reward }}\n        {{- else if and (targetHasRoleID $user $reward) (eq $type "highest") }} {{- takeRoleID $user $reward }} {{- end -}}\n    {{ end }}\n    {{/* TODO: Find a better solution than removing and adding this role */}}\n    {{ if $toAdd }} {{ giveRoleID $user $toAdd }} {{ end }}\n{{ end }}\n')),(0,a.kt)("h2",{id:"author"},"Author"),(0,a.kt)("p",null,"This custom command was written by ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/jo3-l"},"@jo3-l"),"."))}c.isMDXComponent=!0}}]);