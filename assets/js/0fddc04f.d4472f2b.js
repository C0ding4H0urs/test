(self.webpackChunkyagpdb_cc_website=self.webpackChunkyagpdb_cc_website||[]).push([[7534],{3905:function(e,n,r){"use strict";r.d(n,{Zo:function(){return d},kt:function(){return f}});var t=r(7294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=t.createContext({}),c=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},d=function(e){var n=c(e.components);return t.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=c(r),f=i,p=m["".concat(l,".").concat(f)]||m[f]||u[f]||o;return r?t.createElement(p,a(a({ref:n},d),{},{components:r})):t.createElement(p,a({ref:n},d))}));function f(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var c=2;c<o;c++)a[c]=r[c];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},2027:function(e,n,r){"use strict";r.r(n),r.d(n,{frontMatter:function(){return a},metadata:function(){return s},toc:function(){return l},default:function(){return d}});var t=r(2122),i=r(9756),o=(r(7294),r(3905)),a={sidebar_position:4,title:"Server Info CC"},s={unversionedId:"info/server",id:"info/server",isDocsHomePage:!1,title:"Server Info CC",description:"This command allows you to view information about the server.",source:"@site/docs/info/server.md",sourceDirName:"info",slug:"/info/server",permalink:"/info/server",editUrl:"https://github.com/yagpdb-cc/yagpdb-cc/edit/master/yagpdb-cc-website/docs/info/server.md",version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Server Info CC"},sidebar:"tutorialSidebar",previous:{title:"Channel Info CC",permalink:"/info/channel"},next:{title:"User Info CC",permalink:"/info/user"}},l=[],c={toc:l};function d(e){var n=e.components,r=(0,i.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,t.Z)({},c,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This command allows you to view information about the server."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Trigger Type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"Regex")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Trigger:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"\\A(-|<@!?204255221017214977>\\s*)(server|guild)(-?info)?(\\s+|\\z)")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Usage:"),(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"-serverinfo"),(0,o.kt)("br",{parentName:"p"}),"\n","(Use ",(0,o.kt)("inlineCode",{parentName:"p"},"-server icon")," to view the server icon)."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'{{/*\n    This command allows you to view information about the server.\n    Usage: `-serverinfo`. (Use `-server icon` to view the server icon).\n\n    Recommended trigger: Regex trigger with trigger `\\A(-|<@!?204255221017214977>\\s*)(server|guild)(-?info)?(\\s+|\\z)`\n*/}}\n\n{{ $icon := "" }}\n{{ $name := printf "%s (%d)" .Guild.Name .Guild.ID }}\n{{ if .Guild.Icon }}\n    {{ $ext := "webp" }}\n    {{ if eq (slice .Guild.Icon 0 2) "a_" }} {{ $ext = "gif" }} {{ end }}\n    {{ $icon = printf "https://cdn.discordapp.com/icons/%d/%s.%s" .Guild.ID .Guild.Icon $ext }}\n{{ end }}\n\n{{ $owner := userArg .Guild.OwnerID }}\n{{ $levels := cslice\n    "None: Unrestricted"\n    "Low: Must have a verified email on their Discord account."\n    "Medium: Must also be registered on Discord for longer than 5 minutes."\n    "(\u256f\xb0\u25a1\xb0\uff09\u256f\ufe35 \u253b\u2501\u253b: Must also be a member of this server for longer than 10 minutes."\n    "\u253b\u2501\u253b \uff90\u30fd(\u0ca0\u76ca\u0ca0)\u30ce\u5f61\u253b\u2501\u253b: Must have a verified phone on their Discord account."\n}}\n{{ $afk := "n/a" }}\n{{ if .Guild.AfkChannelID }}\n    {{ $afk = printf "**Channel:** <#%d> (%d)\\n**Timeout:** %s"\n        .Guild.AfkChannelID\n        .Guild.AfkChannelID\n        (humanizeDurationSeconds (toDuration (mult .Guild.AfkTimeout .TimeSecond)))\n    }}\n{{ end }}\n{{ $embedsEnabled := "No" }}\n{{ if .Guild.EmbedEnabled }} {{ $embedsEnabled = "Yes" }} {{ end }}\n{{ $createdAt := div .Guild.ID 4194304 | add 1420070400000 | mult 1000000 | toDuration | (newDate 1970 1 1 0 0 0).Add }}\n\n{{ $infoEmbed := cembed\n    "author" (sdict "name" $name "icon_url" $icon)\n    "color" 14232643\n    "thumbnail" (sdict "url" $icon)\n    "fields" (cslice\n        (sdict "name" "\u276f Verification Level" "value" (index $levels .Guild.VerificationLevel))\n        (sdict "name" "\u276f Region" "value" .Guild.Region)\n        (sdict "name" "\u276f Members" "value" (printf "**\u2022 Total:** %d Members\\n**\u2022 Online:** %d Members" .Guild.MemberCount onlineCount))\n        (sdict "name" "\u276f Roles" "value" (printf "**\u2022 Total:** %d\\nUse `-listroles` to list all roles." (len .Guild.Roles)))\n        (sdict "name" "\u276f Owner" "value" (printf "%s (%d)" $owner.String $owner.ID))\n        (sdict "name" "\u276f AFK" "value" $afk)\n        (sdict "name" "\u276f Embeds Enabled" "value" $embedsEnabled)\n    )\n    "footer" (sdict "text" "Created at")\n    "timestamp" $createdAt\n}}\n\n{{ if .CmdArgs }}\n    {{ if eq (index .CmdArgs 0) "icon" }}\n        {{ sendMessage nil (cembed\n            "author" (sdict "name" $name "icon_url" $icon)\n            "title" "\u276f Server Icon"\n            "color" 14232643\n            "image" (sdict "url" $icon)\n        ) }}\n    {{ else }}\n        {{ sendMessage nil $infoEmbed }}\n    {{ end }}\n{{ else }}\n    {{ sendMessage nil $infoEmbed }}\n{{ end }}\n')))}d.isMDXComponent=!0}}]);