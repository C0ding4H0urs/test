"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8422],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return u}});var i=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=i.createContext({}),l=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return i.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},g=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),g=l(n),u=o,m=g["".concat(c,".").concat(u)]||g[u]||d[u]||r;return n?i.createElement(m,a(a({ref:t},p),{},{components:n})):i.createElement(m,a({ref:t},p))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,a=new Array(r);a[0]=g;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var l=2;l<r;l++)a[l]=n[l];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}g.displayName="MDXCreateElement"},8755:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return a},default:function(){return d},frontMatter:function(){return r},metadata:function(){return s},toc:function(){return l}});var i=n(3117),o=(n(7294),n(3905));const r={title:"Ghost-Ping Detector v1"},a=void 0,s={unversionedId:"utilities/ghost-ping-v1",id:"utilities/ghost-ping-v1",title:"Ghost-Ping Detector v1",description:"If you are adding this command for the first time, consider looking at version two of the ghost-ping detector instead.",source:"@site/docs/utilities/ghost-ping-v1.md",sourceDirName:"utilities",slug:"/utilities/ghost-ping-v1",permalink:"/utilities/ghost-ping-v1",draft:!1,editUrl:"https://github.com/yagpdb-cc/yagpdb-cc/edit/master/website/docs/utilities/ghost-ping-v1.md",tags:[],version:"current",frontMatter:{title:"Ghost-Ping Detector v1"},sidebar:"sidebar",previous:{title:"Flag Message",permalink:"/utilities/flag-message"},next:{title:"Ghost-Ping Detector v2",permalink:"/utilities/ghost-ping-v2"}},c={},l=[{value:"Trigger",id:"trigger",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Code",id:"code",level:2},{value:"Author",id:"author",level:2}],p={toc:l};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"If you are adding this command for the first time, consider looking at ",(0,o.kt)("a",{parentName:"p",href:"ghost-ping-v2"},"version two")," of the ghost-ping detector instead.")),(0,o.kt)("p",null,"This command detects ghost pings."),(0,o.kt)("admonition",{title:"Ghost pings",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},'A ghost ping is when you mention a user and then delete the message, leaving a ping that cannot be found: hence the term "ghost ping".')),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"This command only works if the ghost ping was deleted within 5 seconds of being sent (or 10 seconds if ",(0,o.kt)("a",{parentName:"p",href:"ghost-ping-v1/#configuration"},(0,o.kt)("inlineCode",{parentName:"a"},"$CHECK")," is enabled"),").")),(0,o.kt)("h2",{id:"trigger"},"Trigger"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"Regex"),(0,o.kt)("br",null),"\n",(0,o.kt)("strong",{parentName:"p"},"Trigger:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"<@!?\\d{17,19}>")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"\\A"),"."),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"$CHECK"),(0,o.kt)("br",null),"\nWhether to schedule two ",(0,o.kt)("inlineCode",{parentName:"p"},"execCC")," checks. The way this command works is that it checks after 5 seconds whether the message was deleted. This does mean that if you delete the message more than 5 seconds after message creation, this CC won't catch it by default."),(0,o.kt)("p",{parentName:"li"},"By enabling this option, the command will check twice instead of once, meaning that messages deleted between 5 and 10 seconds of being sent will be caught as well."))),(0,o.kt)("h2",{id:"code"},"Code"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-gotmpl",metastring:"file=../../../src/utilities/ghostping_v1.go.tmpl",file:"../../../src/utilities/ghostping_v1.go.tmpl"},'{{/*\n    Ghost-ping detector v1.\n    See <https://yagpdb-cc.github.io/utilities/ghost-ping-v1> for more information.\n\n    Author: Devonte <https://github.com/devnote-dev>\n*/}}\n\n{{/* Configurable values */}}\n{{ $CHECK := false }}\n{{/* End of configurable values */}}\n\n{{ if .ExecData }}\n    {{ $mentions := "" }}{{ $ping := false }}\n\n    {{ if ($m := getMessage nil .ExecData.message) }}\n        {{ if not $m.Mentions }}\n            {{ $ping = true }}\n        {{ end }}\n    {{ else }}\n        {{ $ping = true }}\n    {{ end }}\n\n    {{ if $ping }}\n        {{ if gt (len .ExecData.mentions) 1 }}\n            {{ range .ExecData.mentions }}\n                {{- $mentions = joinStr ">, <@" $mentions . -}}\n            {{ end }}\n        {{ else }}\n            {{ $mentions = index .ExecData.mentions 0 }}\n        {{ end }}\n\n        {{/* Message to send when a ping is detected: */}}\n        {{ sendMessage nil (print "Ghost ping detected by <@" .ExecData.author "> - <@" $mentions ">") }}\n    {{ else }}\n        {{ if and $CHECK (not .ExecData.break) }}\n            {{ $ids := cslice }}\n            {{ range .Message.Mentions }}\n                {{- $ids = $ids.Append (str .ID) -}}\n            {{ end }}\n\n            {{ execCC .CCID nil 5 (sdict "message" .Message.ID "author" .Message.Author.ID "mentions" $ids "content" .Message.Content "break" true) }}\n        {{ end }}\n    {{ end }}\n{{ else }}\n    {{ if .Message.Mentions }}\n        {{ $ids := cslice }}\n            {{ range .Message.Mentions }}\n                {{ $ids = $ids.Append (str .ID) }}\n            {{ end }}\n\n        {{ execCC .CCID nil 5 (sdict "message" .Message.ID "author" .Message.Author.ID "mentions" $ids "break" false) }}\n    {{ end }}\n{{ end }}\n')),(0,o.kt)("h2",{id:"author"},"Author"),(0,o.kt)("p",null,"This custom command was written by ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/devnote-dev"},"@devnote-dev"),"."))}d.isMDXComponent=!0}}]);