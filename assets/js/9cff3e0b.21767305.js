(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5205],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return l},kt:function(){return p}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var d=r.createContext({}),u=function(e){var n=r.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},l=function(e){var n=u(e.components);return r.createElement(d.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,d=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=u(t),p=i,f=m["".concat(d,".").concat(p)]||m[p]||c[p]||o;return t?r.createElement(f,a(a({ref:n},l),{},{components:t})):r.createElement(f,a({ref:n},l))}));function p(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=m;var s={};for(var d in n)hasOwnProperty.call(n,d)&&(s[d]=n[d]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var u=2;u<o;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7721:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return d},metadata:function(){return u},toc:function(){return l},default:function(){return m}});var r=t(2122),i=t(9756),o=(t(7294),t(3905)),a=["components"],s={sidebar_position:9,title:"Guess the Number"},d=void 0,u={unversionedId:"fun/guess-the-number",id:"fun/guess-the-number",isDocsHomePage:!1,title:"Guess the Number",description:"This command is a game where users need to send numbers from 1 to 100. The winners win an amount of credits!",source:"@site/docs/fun/guess-the-number.md",sourceDirName:"fun",slug:"/fun/guess-the-number",permalink:"/fun/guess-the-number",editUrl:"https://github.com/yagpdb-cc/yagpdb-cc/edit/master/website/docs/fun/guess-the-number.md",version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9,title:"Guess the Number"},sidebar:"tutorialSidebar",previous:{title:"Fun Info",permalink:"/fun/funinfo"},next:{title:"Maze Generator",permalink:"/fun/maze"}},l=[],c={toc:l};function m(e){var n=e.components,t=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This command is a game where users need to send numbers from 1 to 100. The winners win an amount of credits!"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Trigger Type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"Regex")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Trigger:")," ",(0,o.kt)("inlineCode",{parentName:"p"},".*")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Usage:"),(0,o.kt)("br",{parentName:"p"}),"\n","To start the game just type 31"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'{{/*\n    This command is a game where users need to send numbers from 1 to 100. The winners win an amount of credits!\n\n    Recommended trigger: Regex trigger with trigger `.*`\n\n    V2 by Dav!d\uff89\u1d48\u1dbb#8302 (555791735607787580)\n\n    To start the game just type 31\n*/}}\n\n{{/* CONFIGURATION VALUES START */}}\n{{ $channel := 722554898612355093 }} {{/* Channel ID where the game is played */}}\n{{ $prize := 400 }} {{/* The number of credits if the user won */}}\n{{ $db := "CREDITS"}} {{/* The db name where the credits are stored  */}}\n{{ $logs := 738718161645338694 }} {{/* Send the number in the logs channel, optional, set to "" if no logs channel */}}\n{{ $information := true }} {{/* true = hints activated | false = hints disabled */}}\n{{ $infoat := 5 }} {{/* When should hints be displayed? After how many fails */}}\n{{/* CONFIGURATION VALUES END */}}\n{{/* DONT TOUCH BELOW !! */}}\n\n\n{{/* Some variables */}}\n{{ $icon := "https://cdn.discordapp.com/attachments/741968239332163618/742027618907324436/warning.png" }}\n{{ if .Guild.Icon }}\n    {{ $icon = printf "https://cdn.discordapp.com/icons/%d/%s.webp" .Guild.ID .Guild.Icon }}\n{{ end }}\n{{ $embed := sdict }}\n{{ $col := sdict\n"finish" 6729778\n"start" 16752384\n"info" 37807 }}\n{{ $fields := cslice }}\n{{/* End of some variables :D */}}\n\n{{ if eq .Channel.ID $channel }}\n    {{ $nr := or (toInt (dbGet 0 "NR").Value) 31 }}\n    {{ if not .ExecData }}\n        {{ with reFindAllSubmatches `\\d+` .Message.Content }}\n                {{ if (eq $nr (toInt (index (index  . 0) 0))) }}\n                    {{ dbSet 0 "NR" (randInt 12345678) }}\n                        {{ $r := dbIncr $.User.ID $db $prize }}\n                    {{ $embed.Set "author" (sdict "name" $.User.Username "icon_url" ($.User.AvatarURL "256")) }}\n                    {{ $embed.Set "color" ($col.Get "finish") }}\n                    {{ $fields = $fields.Append (sdict "name" "You won" "value" (print $prize " " $db) "inline" true) }}\n                    {{ $fields = $fields.Append (sdict "name" "The number was" "value" (print $nr) "inline" true) }}\n                    {{ $fields = $fields.Append (sdict "name" "Now you have" "value" (print $r " " $db) "inline" true) }}\n                    {{ $embed.Set "fields" $fields }}\n                    {{ dbDel 0 "hintsat" }}\n                    {{ execCC $.CCID $channel 10 "something" }}\n            {{ else if $information }}\n                    {{ $k := dbIncr 0 "hintsat" 1 }}\n                    {{ if eq (toInt $k) $infoat }}\n                        {{ $hint1 := (sub $nr (randInt 1 20)) }}\n                        {{ if le $hint1 1 }}\n                            {{ $hint1 = 1 }}\n                        {{ end }}\n                    {{ $hint2 := (add $nr (randInt 1 20)) }}\n                        {{ if ge $hint2 100 }}\n                            {{ $hint2 = 100 }}\n                        {{ end }}\n                    {{ $fields = $fields.Append (sdict "name" "Hint" "value" (print "The number is between **" $hint1 "** and **" $hint2 "**")) }}\n                    {{ $embed.Set "author" (sdict "name" $.User.Username "icon_url" ($.User.AvatarURL "256")) }}\n                    {{ $embed.Set "fields" $fields }}\n                    {{ $embed.Set "thumbnail" (sdict "url" "https://cdn.discordapp.com/attachments/741981782731391047/742021214544855040/idea.png") }}\n                    {{ $embed.Set "color" ($col.Get "info") }}\n                {{ end }}\n            {{ end }}\n    {{ end }}\n    {{ else }}\n    {{ if not $information }}\n        {{ $infoat = "\u274c" }}\n    {{ end }}\n    {{ $x := randInt 100 }}\n    {{ dbSet 0 "NR" $x }}\n    {{ $embed.Set "author" (sdict "name" .Guild.Name "icon_url" $icon) }}\n    {{ $embed.Set "description" "A new number generated! Type numbers from **1** to **100** to try your best :D" }}\n        {{ $fields = $fields.Append (sdict "name" "Winnings" "value" (print $prize " " $db) "inline" true) }}\n    {{ $fields = $fields.Append (sdict "name" "Hints" "value" (print $information) "inline" true) }}\n    {{ $fields = $fields.Append (sdict "name" "Hints at" "value" (print $infoat) "inline" true) }}\n    {{ $embed.Set "color" ($col.Get "start") }}\n    {{ $embed.Set "fields" $fields }}\n        {{ if $logs }}\n            {{ sendMessage $logs (print "The number that generated is: **" $x "**") }}\n        {{ end }}\n    {{ end }}\n{{ end }}\n{{ if $embed }}\n    {{ sendMessage nil (cembed $embed) }}\n{{ end }}\n')))}m.isMDXComponent=!0}}]);