(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6807],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return g}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=d(n),g=r,v=p["".concat(s,".").concat(g)]||p[g]||l[g]||i;return n?a.createElement(v,o(o({ref:t},u),{},{components:n})):a.createElement(v,o({ref:t},u))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=p;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var d=2;d<i;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},6473:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return u},default:function(){return p}});var a=n(2122),r=n(9756),i=(n(7294),n(3905)),o=["components"],c={sidebar_position:3,title:"Reaction Handler"},s=void 0,d={unversionedId:"giveaway/basic_v2/reaction-handler",id:"giveaway/basic_v2/reaction-handler",isDocsHomePage:!1,title:"Reaction Handler",description:"Supporting Reaction CC for Giveaway Package.",source:"@site/docs/giveaway/basic_v2/reaction-handler.md",sourceDirName:"giveaway/basic_v2",slug:"/giveaway/basic_v2/reaction-handler",permalink:"/giveaway/basic_v2/reaction-handler",editUrl:"https://github.com/yagpdb-cc/yagpdb-cc/edit/master/website/docs/giveaway/basic_v2/reaction-handler.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Reaction Handler"},sidebar:"tutorialSidebar",previous:{title:"Main CC",permalink:"/giveaway/basic_v2/main-cc"},next:{title:"Overview",permalink:"/giveaway/compressed/overview"}},u=[],l={toc:u};function p(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Supporting Reaction CC for Giveaway Package."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Trigger Type:")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Reaction")," with option ",(0,i.kt)("inlineCode",{parentName:"p"},"Added + Removed reactions")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'{{/*\n        Supporting Reaction CC for Giveaway Package.\n\n        Recommended trigger: Reaction trigger with option `Added + Removed reactions` selected.\n*/}}\n\n{{/* CONFIGURATION VALUES START */}}\n{{ $giveawayEmoji := `\ud83c\udf89` }} {{/* set giveaway emoji to be used */}}\n{{/* CONFIGURATION VALUES END */}}\n\n{{ $data := sdict }}\n\n{{/* if reaction emoji matches giveaway emoji and user reacting is not a bot , proceed */}}\n{{ if and (eq .Reaction.Emoji.Name $giveawayEmoji) (not .User.Bot ) }}\n    {{/* fetching active giveaways data */}}\n    {{ with (dbGet 7777 "giveaway_active").Value }}{{ $data = sdict . }}{{ end }}\n    {{$giveawayData := $data.Get (joinStr "" .Reaction.ChannelID .Reaction.MessageID)}}\n\n    {{/* if current message is an active giveaway announcement message */}}\n    {{ if $giveawayData }}\n        {{ $giveawayData = sdict $giveawayData }}\n        {{/* Regex for the User ID */}}\n        {{$IDregex:=print .User.ID ","}}\n\n        {{/* if reaction was added increase count by 1 and add user ID to ID list */}}\n        {{if .ReactionAdded}}\n            {{$amount := 1}}\n            {{/* If user is somwhow already present in list, dont increase count but update position in list */}}\n            {{if reFind $IDregex $giveawayData.listID}}\n                {{$giveawayData.Set "listID" (reReplace $IDregex $giveawayData.listID "")}}\n                {{$amount = 0}}\n            {{end}}\n            {{$giveawayData.Set "listID" (print $giveawayData.listID  $IDregex)}}\n            {{$giveawayData.Set "count" (add $giveawayData.count $amount)}}\n        {{else}}\n            {{/* if reaction was removed reduce count by 1 and remove user ID from ID list if user ID is present in list. Else do nothing. */}}\n            {{if reFind $IDregex $giveawayData.listID}}\n                {{$giveawayData.Set "listID" (reReplace $IDregex $giveawayData.listID "")}}\n                {{$giveawayData.Set "count" (add $giveawayData.count -1)}}\n            {{end}}\n        {{end}}\n\n        {{/* update active giveaway database entry */}}\n        {{ $data.Set (joinStr ""  .Reaction.ChannelID .Reaction.MessageID) $giveawayData }}\n        {{ dbSet 7777 "giveaway_active" $data }}\n    {{ end }}\n{{ end }}\n')))}p.isMDXComponent=!0}}]);