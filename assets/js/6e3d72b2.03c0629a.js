(self.webpackChunkyagpdb_cc_website=self.webpackChunkyagpdb_cc_website||[]).push([[5427],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return g},kt:function(){return u}});var s=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);n&&(s=s.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,s)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,s,r=function(e,n){if(null==e)return{};var t,s,r={},o=Object.keys(e);for(s=0;s<o.length;s++)t=o[s],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(s=0;s<o.length;s++)t=o[s],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=s.createContext({}),m=function(e){var n=s.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},g=function(e){var n=m(e.components);return s.createElement(d.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return s.createElement(s.Fragment,{},n)}},c=s.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,g=a(e,["components","mdxType","originalType","parentName"]),c=m(t),u=r,$=c["".concat(d,".").concat(u)]||c[u]||l[u]||o;return t?s.createElement($,i(i({ref:n},g),{},{components:t})):s.createElement($,i({ref:n},g))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=c;var a={};for(var d in n)hasOwnProperty.call(n,d)&&(a[d]=n[d]);a.originalType=e,a.mdxType="string"==typeof e?e:r,i[1]=a;for(var m=2;m<o;m++)i[m]=t[m];return s.createElement.apply(null,i)}return s.createElement.apply(null,t)}c.displayName="MDXCreateElement"},3973:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return i},metadata:function(){return a},toc:function(){return d},default:function(){return g}});var s=t(2122),r=t(9756),o=(t(7294),t(3905)),i={sidebar_position:2,title:"Suggestion CC"},a={unversionedId:"suggestion/suggestion",id:"suggestion/suggestion",isDocsHomePage:!1,title:"Suggestion CC",description:"This command is the main suggestion command with suggestion create/edit/delete and suggestadmin commands.",source:"@site/docs/suggestion/suggestion.md",sourceDirName:"suggestion",slug:"/suggestion/suggestion",permalink:"/suggestion/suggestion",editUrl:"https://github.com/yagpdb-cc/yagpdb-cc/edit/master/yagpdb-cc-website/docs/suggestion/suggestion.md",version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Suggestion CC"},sidebar:"tutorialSidebar",previous:{title:"Suggestion System",permalink:"/suggestion/suggestionREADME"},next:{title:"General Utility CCs",permalink:"/utilities/utilitiesREADME"}},d=[],m={toc:d};function g(e){var n=e.components,t=(0,r.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,s.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This command is the main suggestion command with suggestion create/edit/delete and suggestadmin commands."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Trigger Type:")," Regex"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Trigger:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"\\A(\\-\\s?|<@!?204255221017214977>\\s*)((del(ete)?|edit)?suggest(ion)?|(sa|suggestadmin)\\s+((?:mark)?dupe|deny|implement(ed)?|archive|approved?|comment))(\\s+|\\z)"),(0,o.kt)("br",{parentName:"p"}),"\n","Note: If your prefix is not ",(0,o.kt)("inlineCode",{parentName:"p"},"-")," replace the ",(0,o.kt)("inlineCode",{parentName:"p"},"-")," at the start of the trigger with your prefix.  "),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Usage:")," Refer to ",(0,o.kt)("a",{parentName:"p",href:"/suggestion/suggestionREADME"},"README"),"."),(0,o.kt)("p",null,"P.S. - REMOVE the leading comment AND the second comment, so that you can save the command. Otherwise youll get an error!\nRefer to the ",(0,o.kt)("a",{parentName:"p",href:"/suggestion/suggestionREADME"},"README")," for an explanation about the configuration variables."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'{{/*\n    This command is the main suggestion command with suggestion create/edit/delete and suggestadmin commands. Usage: Refer README.md\n\n    Recommended trigger: Regex trigger with non case sensitive and trigger \n    `\\A(\\-\\s?|<@!?204255221017214977>\\s*)((del(ete)?|edit)?suggest(ion)?|(sa|suggestadmin)\\s+((?:mark)?dupe|deny|implement(ed)?|archive|approved?|comment))(\\s+|\\z)`\n    Note: If your prefix is not `-` replace the `-` at the start of the trigger with your prefix.\n    P.S. - REMOVE This comment AND the second comment, so that you can save the command. \n    Otherwise youll get an error!\n\n    Refer to the README.md for an explanation about the configuration variables.\n*/}}\n\n{{/* CONFIGURATION AREA STARTS */}}\n{{$Suggestion_Channel:=737324313341853796}}\n{{$Logging_Channel:=737324355784278186}}\n{{$Implemented_Channel:=737324417096482907}}\n{{$Approved_Channel:=737324384498221147}}\n{{$Cooldown:=600}}\n{{$Mod_Roles := cslice }}\n{{$Upvote:="upvote:524907425531428864"}}\n{{$Downvote:="downvote:524907425032175638"}}\n{{/* CONFIGURATION AREA ENDS */}}\n\n{{$globalDict:=dict "chans" (dict $Suggestion_Channel true $Approved_Channel true $Implemented_Channel true) "msg" .nil}}\n{{$Prefix:=index (reFindAllSubmatches `.*?: \\x60(.*)\\x60\\z` (execAdmin "Prefix")) 0 1}}\n{{$Escaped_Prefix:=reReplace `[\\$\\^\\.\\[\\]\\-\\?\\!\\\\\\*\\{\\}\\(\\)\\|\\+]` $Prefix `\\${0}`}}\n{{$error:=""}}\n{{$Syntax:=""}}\n{{$IS_Mod:=false}}\n{{if in (slice (exec "viewperms") (add 25 (len .User.Username))) `Administrator`}}{{$IS_Mod =true}}{{else}}{{range $Mod_Roles}}{{if in $.Member.Roles .}}{{$IS_Mod =true}}{{end}}{{end}}{{end}}\n{{$Attachments:=""}}{{$Img_Set:=false}}\n\n{{if not (reFind (print `\\A` $Escaped_Prefix `|<@!?204255221017214977>`) .Message.Content)}}{{$error ="Did not set regex to match Server Prefix"}}{{$Syntax =`Prefix/Yag Mention <Command> <Args>`}}{{else}}\n{{if reFind `(?i)\\bsuggest(ion)?\\b` .Cmd}}\n    {{$Syntax =print .Cmd " <Suggestion_Here>"}}\n    {{$col:=16777215}}{{$pos:=0}}{{$r:=.Member.Roles}}{{range .Guild.Roles}}{{if and (in $r .ID) (.Color) (lt $pos .Position)}}{{$pos =.Position}}{{$col =.Color}}{{end}}{{end}}    \n    {{if or .StrippedMsg .Message.Attachments}}\n        {{with (dbGet .User.ID "suggestCld")}}\n            {{$error =print "This command is on cooldown for " (humanizeDurationSeconds (.ExpiresAt.Sub currentTime)) " to avoid spam."}}\n        {{else}}\n            {{if not $IS_Mod}}{{if $Cooldown}}{{dbSetExpire .User.ID "suggestCld" "cooldown" $Cooldown}}{{end}}{{end}}\n            {{$embed := sdict\n                        "title" (print "Suggestion #" (dbIncr 0 "suggestions-count" 1))\n                        "description" .StrippedMsg\n                        "color" $col\n                        "author" (sdict "name" (str $.User) "icon_url" ($.User.AvatarURL "512"))\n                        "timestamp"  currentTime\n                        "footer" (sdict "text" (print "Author ID - " $.User.ID))\n            }}\n            \n            {{range .Message.Attachments}}{{if and (not $Img_Set) .Width}}{{$Img_Set =true}}{{$embed.Set "image" (sdict "url" .ProxyURL)}}{{else}}{{$Attachments =print $Attachments "\\n[" .Filename "](" .ProxyURL ")"}}{{end}}{{end}}\n            {{if $Attachments}}{{$embed.Set "description" (print $embed.description "\\n\\n**__Attachments:__**" $Attachments)}}{{end}}\n            {{$ID:=sendMessageRetID $Suggestion_Channel (cembed $embed)}}\n            {{addMessageReactions $Suggestion_Channel $ID $Upvote $Downvote}}\n            {{sendDM "Suggestion submitted successfully. If you want to delete your suggestion, do so with `" $Prefix "deletesuggestion " $ID "` on the " $.Guild.Name " server."}}\n            {{addReactions $Upvote}}\n        {{end}}\n    {{else}}\n        {{$error ="Insufficient Arguments."}}\n    {{end}}\n    \n{{else}}\n    {{$authorID:=0}}{{$message:=.nil}}{{$channel:=.nil}}{{$rest:=""}}{{$command:=""}}{{$type:=""}}{{$SNum:=0}}\n    {{$Syntax =print .Cmd " <Suggestion_ID> <Message/Arguments>"}}\n\n    {{with reFindAllSubmatches (print `(?si)\\A(?:` $Escaped_Prefix `\\s?|\\S+\\s*)(?:(del|edit)\\w+|\\w+\\s+(\\w+))\\s+(\\d+)\\s*(.*)`) .Message.Content}}\n        {{$command =lower (or (index . 0 1) (index . 0 2))}}\n        {{$mID:=index . 0 3}}\n        {{$rest =index . 0 4}}\n        {{$globalDict.Set "mID" $mID}}\n        {{template "process-suggest-msg" $globalDict}}\n        {{$message =$globalDict.msg}}{{$channel =$globalDict.chan}}{{$error =$globalDict.err}}{{$type =$globalDict.type}}{{$SNum =$globalDict.SNum}}{{$authorID =$globalDict.authorID}}\n    {{else}}\n        {{$error ="Invalid Syntax: did not provide valid Message ID"}}\n    {{end}}\n\n    {{if and (ne $command "comment") (not $error)}}\n        {{if eq $type "Implemented"}}\n            {{$error =print "Cannot use " $command " command on Implemented Suggestions"}}\n        {{else if and (eq $type "Approved") (eq $command "del" "edit" "approve" "approved")}}\n            {{$error =print "Cannot use " $command " command on Approved Suggestions"}}\n        {{end}}\n    {{end}}\n\n    {{if not $error}}\n        {{$embed:=structToSdict (index $message.Embeds 0)}}{{range $k,$v:=$embed}}{{if eq (kindOf $v true) `struct`}}{{$embed.Set $k (structToSdict $v)}}{{end}}{{end}}{{$embed.Author.Set "Icon_URL" $embed.Author.IconURL}}\n        {{if eq $command "del"}}\n            {{if or (eq $authorID .User.ID) $IS_Mod}}\n                {{deleteMessage $channel $message.ID 0}}\n            {{else}}\n                {{$error ="You can only delete your own suggestions. Ensure that you have used correct Suggestion ID."}}\n            {{end}}\n        {{else if eq $command "edit"}}\n            {{if eq $authorID .User.ID}}\n                {{if $rest}}\n                    {{$embed.Set "Description" $rest}}\n                    {{editMessage $channel $message.ID (cembed $embed)}}\n                {{else}}\n                    {{$error ="Edited Suggestion cannot be blank"}}\n                {{end}}\n            {{else}}\n                {{$error ="You can only edit your own suggestions. Ensure that you have used correct Suggestion ID."}}\n            {{end}}\n        {{else if $IS_Mod}}\n            {{$send_chan:=$Logging_Channel}}\n            {{if ne $command "comment"}}\n            {{if eq $command "dupe" "markdupe"}}\n                {{$command ="Dupe"}}\n            {{else if eq $command "deny"}}\n                {{$command ="Denied"}}\n            {{else if eq $command "approve" "approved"}}\n                {{$command ="Approved"}}{{$send_chan =$Approved_Channel}}\n            {{else}}\n                {{$command ="Implemented"}}{{$send_chan =$Implemented_Channel}}\n            {{end}}\n            {{$embed.Set "Title" (print $command " Suggestion #" $SNum)}}\n            {{end}}\n                \n            {{if eq $command "Dupe"}}\n                {{$Syntax ="<Suggestion_ID> <Original_Suggestion_ID>"}} \n                {{with $rest}}\n                    {{$globalDict.Set "mID" .}}{{$globalDict.Set "msg" $.nil}}\n                    {{template "process-suggest-msg" $globalDict}}\n                    {{if not $globalDict.err}}\n                        {{if lt $globalDict.SNum $SNum}}\n                            {{if $globalDict.msg}}\n                                {{$embed.Set "Description" (print $embed.Description "\\n\\n**This message has been marked as a dupe of:\\n**https://discordapp.com/channels/" $.Guild.ID "/" $globalDict.chan "/" .)}}\n                                {{deleteMessage $channel $message.ID 0}}\n                                {{sendMessage $send_chan (complexMessage "content" (print "<@" $authorID "> | The suggestion below has been marked as Dupe!") "embed" $embed)}}\n                            {{else}}\n                                {{$error =print "Invalid Original Suggestion Message ID : `" $rest "`"}}\n                            {{end}}\n                        {{else}}\n                            {{$error ="Original Suggestion should be older than dupe Suggestion"}}\n                        {{end}}\n                    {{else}}\n                        {{$error =print "Original Suggestion: " $globalDict.err}}\n                    {{end}}\n                {{else}}\n                    {{$error ="Did not provide valid ID for Original Suggestion Message"}}\n                {{end}}\n            {{else if eq $command "Denied"}}\n                {{deleteMessage $channel $message.ID 0}}\n                {{sendMessage $send_chan (complexMessage "content" (print "<@" $authorID "> | The suggestion below has been Denied for reason: " $rest) "embed" $embed)}}\n            {{else if eq $command "comment"}}\n                {{template "handle-comments" (sdict "embed" $embed "comment" $rest "user" $.User)}}\n                {{editMessage $channel $message.ID (cembed $embed)}}\n            {{else}}\n                {{template "handle-comments" (sdict "embed" $embed "comment" $rest "user" $.User)}}\n                {{$embed.Footer.Set "Text" (print $command " By : " .User.Username " - " .User.ID " \u25cf " $embed.Footer.Text)}}\n                {{deleteMessage $channel $message.ID 0}}\n                {{if ne $send_chan $Logging_Channel}}{{sendMessage  $send_chan (cembed $embed)}}{{end}}\n                {{sendMessage $Logging_Channel (complexMessage "content" (print print "<@" $authorID "> | The suggestion below has been " $command) "embed" $embed)}}\n            {{end}}\n        {{else}}\n            {{$error ="Must be a Mod/Admin to use Suggest Admin commands"}}\n        {{end}}\n    {{end}}\n{{end}}\n{{end}}\n\n{{if not (or $Attachments $Img_Set)}}{{deleteTrigger 20}}{{end}}{{deleteResponse 5}}\n{{if $error}}\n    {{$ID:=sendMessageRetID nil (cembed "title" "Error" "color" 0xFF0000 "description" (print "**Error:** " $error "\\n\\n**Syntax:** `" $Syntax "`"))}}\n    {{deleteMessage nil $ID 25}}\n{{else}}\nDone :+1:\n{{end}}\n\n{{define "handle-comments"}}\n    {{if and (not .embed.Fields) .comment}}{{.embed.Set "Description" (print .embed.Description "\\n\\n**__Comment:__**")}}{{else if not .comment}}{{.embed.Set "Description" (reReplace  `\\n\\n\\*\\*__Comment:__\\*\\*\\z` .embed.Description "")}}{{end}}\n    {{if .comment}}{{.embed.Set "Fields" (cslice (sdict "name" (print "BY : " .user " - " .user.ID) "value" .comment))}}{{else}}{{.embed.Set "Fields" cslice}}{{end}}\n{{end}}\n\n{{define "process-suggest-msg"}}\n    {{$err:=""}}\n    {{range $k,$v:=.chans}}\n        {{if not $.msg}}{{with getMessage $k $.mID}}{{$.Set "msg" .}}{{$.Set "chan" $k}}{{end}}{{end}}\n    {{end}}\n    \n    {{with .msg}}\n        {{with .Embeds}}\n            {{with (index . 0).Footer}}\n                {{with reFindAllSubmatches `(?s).*Author ID - (\\d{17,19})\\z` .Text}}\n                    {{$.Set "authorID" (toInt64 (index . 0 1))}}\n                {{else}}\n                     {{$err ="Not a valid Suggestion Message"}}\n                {{end}}         \n            {{else}}\n                {{$err ="Not a valid Suggestion Message"}}\n            {{end}}\n            {{with reFindAllSubmatches `\\A(?:(Suggestion)|(Approved) Suggestion|(Implemented) Suggestion) #(\\d+)\\z` (index . 0).Title}}\n                {{$.Set "type"  (or (index . 0 1) (index . 0 2) (index . 0 3))}}\n                {{$.Set "SNum" (toInt (index . 0 4))}}\n            {{else}}\n                {{$err ="Not a valid Suggestion Message"}}\n            {{end}}\n        {{else}}\n            {{$err ="Not a valid Suggestion Message"}}\n        {{end}}\n    {{else}}\n        {{$err =print "Invalid Message ID : `" $.mID "`"}}\n    {{end}}\n    {{.Set "err" $err}}\n{{end}}\n')))}g.isMDXComponent=!0}}]);