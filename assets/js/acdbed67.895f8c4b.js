"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3346],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=a,h=d["".concat(c,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(h,o(o({ref:t},p),{},{components:n})):r.createElement(h,o({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1681:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return p},default:function(){return d}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],s={title:"Binary Search"},c=void 0,l={unversionedId:"code-snippets/binary-search",id:"code-snippets/binary-search",isDocsHomePage:!1,title:"Binary Search",description:"This code snippet searches for a value in a sorted slice/array in O(log n) using the binary search algorithm.",source:"@site/docs/code-snippets/binary-search.md",sourceDirName:"code-snippets",slug:"/code-snippets/binary-search",permalink:"/code-snippets/binary-search",editUrl:"https://github.com/yagpdb-cc/yagpdb-cc/edit/master/website/docs/code-snippets/binary-search.md",tags:[],version:"current",frontMatter:{title:"Binary Search"},sidebar:"sidebar",previous:{title:"Overview",permalink:"/code-snippets/overview"},next:{title:"Get Username Color",permalink:"/code-snippets/get-username-color"}},p=[{value:"Code",id:"code",children:[]},{value:"Usage",id:"usage",children:[]},{value:"Author",id:"author",children:[]}],u={toc:p};function d(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This code snippet searches for a value in a sorted slice/array in ",(0,i.kt)("em",{parentName:"p"},"O(log n)")," using the ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Binary_search_algorithm"},"binary search")," algorithm."),(0,i.kt)("h2",{id:"code"},"Code"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gotmpl",metastring:"file=../../../src/code_snippets/binary_search.go.tmpl",file:"../../../src/code_snippets/binary_search.go.tmpl"},'{{/*\n    Searches a sorted slice/array in O(log n) time using binary search.\n    See <https://yagpdb-cc.github.io/code-snippets/binary-search> for more information.\n\n    Author: Alikuxac <https://github.com/alikuxac>\n*/}}\n\n{{define "binary_search"}}\n    {{- $list := .List}}\n    {{- $left := or .Left 0}}\n    {{- $right := or .Right (sub (len $list) 1)}}\n    {{- $value := .Value}}\n    {{- if .Found}}\n        {{- if ge $right 1}}\n            {{- $mid := (div (add $left $right) 2) | toInt}}\n            {{- if eq (index $list $mid) $value}}\n                {{- .Set "Result" $mid}}\n                {{- .Set "Found" false}}\n            {{- end}}\n            {{- if gt (index $list $mid) $value}}\n                {{- .Set "Right" (sub $mid 1)}}\n                {{- template "binary_search" .}}\n            {{- else}}\n                {{- .Set "Left" (add $mid 1)}}\n                {{- template "binary_search" .}}\n            {{- end}}\n        {{- else}}\n            {{- .Set "Result" -1}}\n            {{- .Set "Found" false}}\n        {{- end}}\n    {{- end -}}\n{{end}}\n')),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("p",null,"First, copy the above snippet to the top of your code.",(0,i.kt)("br",null),"\nTo use it, you will need to construct a map holding your input slice/array in addition to the value you wish to search for:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gotmpl"},'{{/* code snippet here */}}\n{{$query := sdict "List" (cslice 1 2 3 5 7 8) "Value" 2 "Found" true}}\n')),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},(0,i.kt)("inlineCode",{parentName:"p"},'"Found" true')," tells the template to begin searching in the slice/array, so make sure to set it!"))),(0,i.kt)("p",null,"Then, we can run the template, passing the query as data:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gotmpl",metastring:"{3}","{3}":!0},'{{/* code snippet here */}}\n{{$query := sdict "List" (cslice 1 2 3 5 7 8) "Value" 2 "Found" true}}\n{{template "binary_search" $query}}\n')),(0,i.kt)("p",null,"Running the template will add a new value to your map, ",(0,i.kt)("inlineCode",{parentName:"p"},"Result"),", which is the index where the element was found, or ",(0,i.kt)("inlineCode",{parentName:"p"},"-1")," if it wasn't found. We can access it using dot notation or ",(0,i.kt)("inlineCode",{parentName:"p"},"index"),", like such:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gotmpl",metastring:"{4}","{4}":!0},'{{/* code snippet here */}}\n{{$query := sdict "List" (cslice 1 2 3 5 7 8) "Value" 2 "Found" true}}\n{{template "binary_search" $query}}\nIndex: {{$query.Result}}\n')),(0,i.kt)("h2",{id:"author"},"Author"),(0,i.kt)("p",null,"This code snippet was written by ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/alikuxac"},"@alikuxac"),"."))}d.isMDXComponent=!0}}]);