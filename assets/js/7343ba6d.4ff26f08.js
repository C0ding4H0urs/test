(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5588],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return l},kt:function(){return u}});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},s=Object.keys(e);for(o=0;o<s.length;o++)t=s[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)t=s[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=o.createContext({}),m=function(e){var n=o.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=m(e.components);return o.createElement(d.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},g=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,d=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),g=m(t),u=r,$=g["".concat(d,".").concat(u)]||g[u]||c[u]||s;return t?o.createElement($,i(i({ref:n},l),{},{components:t})):o.createElement($,i({ref:n},l))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,i=new Array(s);i[0]=g;var a={};for(var d in n)hasOwnProperty.call(n,d)&&(a[d]=n[d]);a.originalType=e,a.mdxType="string"==typeof e?e:r,i[1]=a;for(var m=2;m<s;m++)i[m]=t[m];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}g.displayName="MDXCreateElement"},9317:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return a},contentTitle:function(){return d},metadata:function(){return m},toc:function(){return l},default:function(){return g}});var o=t(2122),r=t(9756),s=(t(7294),t(3905)),i=["components"],a={title:"Main CC"},d=void 0,m={unversionedId:"suggestion/main-cc",id:"suggestion/main-cc",isDocsHomePage:!1,title:"Main CC",description:"Main suggestion command; allows users to create/update/delete suggestions in addition to allowing admins to manage suggestions.",source:"@site/docs/suggestion/main-cc.md",sourceDirName:"suggestion",slug:"/suggestion/main-cc",permalink:"/suggestion/main-cc",editUrl:"https://github.com/yagpdb-cc/yagpdb-cc/edit/master/website/docs/suggestion/main-cc.md",version:"current",frontMatter:{title:"Main CC"},sidebar:"sidebar",previous:{title:"Overview",permalink:"/suggestion/overview"},next:{title:"Overview",permalink:"/tags/overview"}},l=[{value:"Trigger",id:"trigger",children:[]},{value:"Usage",id:"usage",children:[]},{value:"Configuration",id:"configuration",children:[]},{value:"Code",id:"code",children:[]},{value:"Author",id:"author",children:[]}],c={toc:l};function g(e){var n=e.components,t=(0,r.Z)(e,i);return(0,s.kt)("wrapper",(0,o.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Main suggestion command; allows users to create/update/delete suggestions in addition to allowing admins to manage suggestions."),(0,s.kt)("p",null,"For more information about the suggestion system, see ",(0,s.kt)("a",{parentName:"p",href:"overview"},"this")," page."),(0,s.kt)("h2",{id:"trigger"},"Trigger"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type:")," ",(0,s.kt)("inlineCode",{parentName:"p"},"Regex"),(0,s.kt)("br",null),"\n",(0,s.kt)("strong",{parentName:"p"},"Trigger:")," ",(0,s.kt)("inlineCode",{parentName:"p"},"\\A(\\-\\s?|<@!?204255221017214977>\\s*)((del(ete)?|edit)?suggest(ion)?|(sa|suggestadmin)\\s+((?:mark)?dupe|deny|implement(ed)?|archive|approved?|comment))(\\s+|\\z)")),(0,s.kt)("h2",{id:"usage"},"Usage"),(0,s.kt)("p",null,"See the ",(0,s.kt)("a",{parentName:"p",href:"overview/#commands"},"suggestion system overview")," for more information about how to use this command."),(0,s.kt)("h2",{id:"configuration"},"Configuration"),(0,s.kt)("p",null,"Again, see the ",(0,s.kt)("a",{parentName:"p",href:"overview/#configuration"},"suggestion package overview")," for more information about how to configure this command."),(0,s.kt)("h2",{id:"code"},"Code"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go",metastring:"file=../../../src/suggestion/suggestion.go.tmpl",file:"../../../src/suggestion/suggestion.go.tmpl"},'{{/*\n    Main command for the suggestion system.\n    See <https://yagpdb-cc.github.io/suggestion/main-cc> for more information.\n\n    Author: Satty9361 <https://github.com/Satty9361>\n*/}}\n\n{{/* Configurable values */}}\n{{$Suggestion_Channel:=737324313341853796}}\n{{$Logging_Channel:=737324355784278186}}\n{{$Implemented_Channel:=737324417096482907}}\n{{$Approved_Channel:=737324384498221147}}\n{{$Cooldown:=600}}\n{{$Mod_Roles := cslice }}\n{{$Upvote:="upvote:524907425531428864"}}\n{{$Downvote:="downvote:524907425032175638"}}\n{{/* End of configurable values */}}\n\n{{$globalDict:=dict "chans" (dict $Suggestion_Channel true $Approved_Channel true $Implemented_Channel true) "msg" .nil}}\n{{$Prefix:=index (reFindAllSubmatches `.*?: \\x60(.*)\\x60\\z` (execAdmin "Prefix")) 0 1}}\n{{$Escaped_Prefix:=reReplace `[\\$\\^\\.\\[\\]\\-\\?\\!\\\\\\*\\{\\}\\(\\)\\|\\+]` $Prefix `\\${0}`}}\n{{$error:=""}}\n{{$Syntax:=""}}\n{{$IS_Mod:=false}}\n{{if in (slice (exec "viewperms") (add 25 (len .User.Username))) `Administrator`}}{{$IS_Mod =true}}{{else}}{{range $Mod_Roles}}{{if in $.Member.Roles .}}{{$IS_Mod =true}}{{end}}{{end}}{{end}}\n{{$Attachments:=""}}{{$Img_Set:=false}}\n\n{{if not (reFind (print `\\A` $Escaped_Prefix `|<@!?204255221017214977>`) .Message.Content)}}{{$error ="Did not set regex to match Server Prefix"}}{{$Syntax =`Prefix/Yag Mention <Command> <Args>`}}{{else}}\n{{if reFind `(?i)\\bsuggest(ion)?\\b` .Cmd}}\n    {{$Syntax =print .Cmd " <Suggestion_Here>"}}\n    {{$col:=16777215}}{{$pos:=0}}{{$r:=.Member.Roles}}{{range .Guild.Roles}}{{if and (in $r .ID) (.Color) (lt $pos .Position)}}{{$pos =.Position}}{{$col =.Color}}{{end}}{{end}}    \n    {{if or .StrippedMsg .Message.Attachments}}\n        {{with (dbGet .User.ID "suggestCld")}}\n            {{$error =print "This command is on cooldown for " (humanizeDurationSeconds (.ExpiresAt.Sub currentTime)) " to avoid spam."}}\n        {{else}}\n            {{if not $IS_Mod}}{{if $Cooldown}}{{dbSetExpire .User.ID "suggestCld" "cooldown" $Cooldown}}{{end}}{{end}}\n            {{$embed := sdict\n                        "title" (print "Suggestion #" (dbIncr 0 "suggestions-count" 1))\n                        "description" .StrippedMsg\n                        "color" $col\n                        "author" (sdict "name" (str $.User) "icon_url" ($.User.AvatarURL "512"))\n                        "timestamp"  currentTime\n                        "footer" (sdict "text" (print "Author ID - " $.User.ID))\n            }}\n            \n            {{range .Message.Attachments}}{{if and (not $Img_Set) .Width}}{{$Img_Set =true}}{{$embed.Set "image" (sdict "url" .ProxyURL)}}{{else}}{{$Attachments =print $Attachments "\\n[" .Filename "](" .ProxyURL ")"}}{{end}}{{end}}\n            {{if $Attachments}}{{$embed.Set "description" (print $embed.description "\\n\\n**__Attachments:__**" $Attachments)}}{{end}}\n            {{$ID:=sendMessageRetID $Suggestion_Channel (cembed $embed)}}\n            {{addMessageReactions $Suggestion_Channel $ID $Upvote $Downvote}}\n            {{sendDM "Suggestion submitted successfully. If you want to delete your suggestion, do so with `" $Prefix "deletesuggestion " $ID "` on the " $.Guild.Name " server."}}\n            {{addReactions $Upvote}}\n        {{end}}\n    {{else}}\n        {{$error ="Insufficient Arguments."}}\n    {{end}}\n    \n{{else}}\n    {{$authorID:=0}}{{$message:=.nil}}{{$channel:=.nil}}{{$rest:=""}}{{$command:=""}}{{$type:=""}}{{$SNum:=0}}\n    {{$Syntax =print .Cmd " <Suggestion_ID> <Message/Arguments>"}}\n\n    {{with reFindAllSubmatches (print `(?si)\\A(?:` $Escaped_Prefix `\\s?|\\S+\\s*)(?:(del|edit)\\w+|\\w+\\s+(\\w+))\\s+(\\d+)\\s*(.*)`) .Message.Content}}\n        {{$command =lower (or (index . 0 1) (index . 0 2))}}\n        {{$mID:=index . 0 3}}\n        {{$rest =index . 0 4}}\n        {{$globalDict.Set "mID" $mID}}\n        {{template "process-suggest-msg" $globalDict}}\n        {{$message =$globalDict.msg}}{{$channel =$globalDict.chan}}{{$error =$globalDict.err}}{{$type =$globalDict.type}}{{$SNum =$globalDict.SNum}}{{$authorID =$globalDict.authorID}}\n    {{else}}\n        {{$error ="Invalid Syntax: did not provide valid Message ID"}}\n    {{end}}\n\n    {{if and (ne $command "comment") (not $error)}}\n        {{if eq $type "Implemented"}}\n            {{$error =print "Cannot use " $command " command on Implemented Suggestions"}}\n        {{else if and (eq $type "Approved") (eq $command "del" "edit" "approve" "approved")}}\n            {{$error =print "Cannot use " $command " command on Approved Suggestions"}}\n        {{end}}\n    {{end}}\n\n    {{if not $error}}\n        {{$embed:=structToSdict (index $message.Embeds 0)}}{{range $k,$v:=$embed}}{{if eq (kindOf $v true) `struct`}}{{$embed.Set $k (structToSdict $v)}}{{end}}{{end}}{{$embed.Author.Set "Icon_URL" $embed.Author.IconURL}}\n        {{if eq $command "del"}}\n            {{if or (eq $authorID .User.ID) $IS_Mod}}\n                {{deleteMessage $channel $message.ID 0}}\n            {{else}}\n                {{$error ="You can only delete your own suggestions. Ensure that you have used correct Suggestion ID."}}\n            {{end}}\n        {{else if eq $command "edit"}}\n            {{if eq $authorID .User.ID}}\n                {{if $rest}}\n                    {{$embed.Set "Description" $rest}}\n                    {{editMessage $channel $message.ID (cembed $embed)}}\n                {{else}}\n                    {{$error ="Edited Suggestion cannot be blank"}}\n                {{end}}\n            {{else}}\n                {{$error ="You can only edit your own suggestions. Ensure that you have used correct Suggestion ID."}}\n            {{end}}\n        {{else if $IS_Mod}}\n            {{$send_chan:=$Logging_Channel}}\n            {{if ne $command "comment"}}\n            {{if eq $command "dupe" "markdupe"}}\n                {{$command ="Dupe"}}\n            {{else if eq $command "deny"}}\n                {{$command ="Denied"}}\n            {{else if eq $command "approve" "approved"}}\n                {{$command ="Approved"}}{{$send_chan =$Approved_Channel}}\n            {{else}}\n                {{$command ="Implemented"}}{{$send_chan =$Implemented_Channel}}\n            {{end}}\n            {{$embed.Set "Title" (print $command " Suggestion #" $SNum)}}\n            {{end}}\n                \n            {{if eq $command "Dupe"}}\n                {{$Syntax ="<Suggestion_ID> <Original_Suggestion_ID>"}} \n                {{with $rest}}\n                    {{$globalDict.Set "mID" .}}{{$globalDict.Set "msg" $.nil}}\n                    {{template "process-suggest-msg" $globalDict}}\n                    {{if not $globalDict.err}}\n                        {{if lt $globalDict.SNum $SNum}}\n                            {{if $globalDict.msg}}\n                                {{$embed.Set "Description" (print $embed.Description "\\n\\n**This message has been marked as a dupe of:\\n**https://discordapp.com/channels/" $.Guild.ID "/" $globalDict.chan "/" .)}}\n                                {{deleteMessage $channel $message.ID 0}}\n                                {{sendMessage $send_chan (complexMessage "content" (print "<@" $authorID "> | The suggestion below has been marked as Dupe!") "embed" $embed)}}\n                            {{else}}\n                                {{$error =print "Invalid Original Suggestion Message ID : `" $rest "`"}}\n                            {{end}}\n                        {{else}}\n                            {{$error ="Original Suggestion should be older than dupe Suggestion"}}\n                        {{end}}\n                    {{else}}\n                        {{$error =print "Original Suggestion: " $globalDict.err}}\n                    {{end}}\n                {{else}}\n                    {{$error ="Did not provide valid ID for Original Suggestion Message"}}\n                {{end}}\n            {{else if eq $command "Denied"}}\n                {{deleteMessage $channel $message.ID 0}}\n                {{sendMessage $send_chan (complexMessage "content" (print "<@" $authorID "> | The suggestion below has been Denied for reason: " $rest) "embed" $embed)}}\n            {{else if eq $command "comment"}}\n                {{template "handle-comments" (sdict "embed" $embed "comment" $rest "user" $.User)}}\n                {{editMessage $channel $message.ID (cembed $embed)}}\n            {{else}}\n                {{template "handle-comments" (sdict "embed" $embed "comment" $rest "user" $.User)}}\n                {{$embed.Footer.Set "Text" (print $command " By : " .User.Username " - " .User.ID " \u25cf " $embed.Footer.Text)}}\n                {{deleteMessage $channel $message.ID 0}}\n                {{if ne $send_chan $Logging_Channel}}{{sendMessage  $send_chan (cembed $embed)}}{{end}}\n                {{sendMessage $Logging_Channel (complexMessage "content" (print print "<@" $authorID "> | The suggestion below has been " $command) "embed" $embed)}}\n            {{end}}\n        {{else}}\n            {{$error ="Must be a Mod/Admin to use Suggest Admin commands"}}\n        {{end}}\n    {{end}}\n{{end}}\n{{end}}\n\n{{if not (or $Attachments $Img_Set)}}{{deleteTrigger 20}}{{end}}{{deleteResponse 5}}\n{{if $error}}\n    {{$ID:=sendMessageRetID nil (cembed "title" "Error" "color" 0xFF0000 "description" (print "**Error:** " $error "\\n\\n**Syntax:** `" $Syntax "`"))}}\n    {{deleteMessage nil $ID 25}}\n{{else}}\nDone :+1:\n{{end}}\n\n{{define "handle-comments"}}\n    {{if and (not .embed.Fields) .comment}}{{.embed.Set "Description" (print .embed.Description "\\n\\n**__Comment:__**")}}{{else if not .comment}}{{.embed.Set "Description" (reReplace  `\\n\\n\\*\\*__Comment:__\\*\\*\\z` .embed.Description "")}}{{end}}\n    {{if .comment}}{{.embed.Set "Fields" (cslice (sdict "name" (print "BY : " .user " - " .user.ID) "value" .comment))}}{{else}}{{.embed.Set "Fields" cslice}}{{end}}\n{{end}}\n\n{{define "process-suggest-msg"}}\n    {{$err:=""}}\n    {{range $k,$v:=.chans}}\n        {{if not $.msg}}{{with getMessage $k $.mID}}{{$.Set "msg" .}}{{$.Set "chan" $k}}{{end}}{{end}}\n    {{end}}\n    \n    {{with .msg}}\n        {{with .Embeds}}\n            {{with (index . 0).Footer}}\n                {{with reFindAllSubmatches `(?s).*Author ID - (\\d{17,19})\\z` .Text}}\n                    {{$.Set "authorID" (toInt64 (index . 0 1))}}\n                {{else}}\n                     {{$err ="Not a valid Suggestion Message"}}\n                {{end}}         \n            {{else}}\n                {{$err ="Not a valid Suggestion Message"}}\n            {{end}}\n            {{with reFindAllSubmatches `\\A(?:(Suggestion)|(Approved) Suggestion|(Implemented) Suggestion) #(\\d+)\\z` (index . 0).Title}}\n                {{$.Set "type"  (or (index . 0 1) (index . 0 2) (index . 0 3))}}\n                {{$.Set "SNum" (toInt (index . 0 4))}}\n            {{else}}\n                {{$err ="Not a valid Suggestion Message"}}\n            {{end}}\n        {{else}}\n            {{$err ="Not a valid Suggestion Message"}}\n        {{end}}\n    {{else}}\n        {{$err =print "Invalid Message ID : `" $.mID "`"}}\n    {{end}}\n    {{.Set "err" $err}}\n{{end}}\n')),(0,s.kt)("h2",{id:"author"},"Author"),(0,s.kt)("p",null,"This custom command was written by ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/Satty9361"},"@Satty9361"),"."))}g.isMDXComponent=!0}}]);