(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9416],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return l},kt:function(){return f}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},l=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=p(t),f=i,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||o;return t?r.createElement(m,a(a({ref:n},l),{},{components:t})):r.createElement(m,a({ref:n},l))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=d;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var p=2;p<o;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5087:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return l},default:function(){return d}});var r=t(2122),i=t(9756),o=(t(7294),t(3905)),a=["components"],s={sidebar_position:6,title:"Selection Sort"},c=void 0,p={unversionedId:"code-snippets/selection-sort",id:"code-snippets/selection-sort",isDocsHomePage:!1,title:"Selection Sort",description:"This CC is a snippet for sorting an array of numbers descending or ascending.",source:"@site/docs/code-snippets/selection-sort.md",sourceDirName:"code-snippets",slug:"/code-snippets/selection-sort",permalink:"/code-snippets/selection-sort",editUrl:"https://github.com/yagpdb-cc/yagpdb-cc/edit/master/website/docs/code-snippets/selection-sort.md",version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,title:"Selection Sort"},sidebar:"tutorialSidebar",previous:{title:"Ordinal",permalink:"/code-snippets/ordinal"},next:{title:"Snowflake to Time",permalink:"/code-snippets/snowflake2time"}},l=[],u={toc:l};function d(e){var n=e.components,t=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This CC is a snippet for sorting an array of numbers descending or ascending.",(0,o.kt)("br",{parentName:"p"}),"\n","The array input is ",(0,o.kt)("inlineCode",{parentName:"p"},"$arr"),". It is sorted in place."),(0,o.kt)("p",null,"Currently, it sorts in DESC order, but this may be changed simply by changing the comparison on L13 to ",(0,o.kt)("inlineCode",{parentName:"p"},"gt")," instead of ",(0,o.kt)("inlineCode",{parentName:"p"},"lt"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"{{/*\n    This CC is a snippet for sorting an array of numbers descending or ascending.\n    The array input is $arr. It is sorted in place.\n\n    Currently, it sorts in DESC order, but this may be changed simply by changing the comparison on L13 to `gt` instead of `lt`.\n*/}}\n\n{{ $arr := cslice 1 5 23 5 6 7 }}\n{{ $len := len $arr }}\n{{ range seq 0 $len }}\n    {{- $min := . }}\n    {{- range seq (add . 1) $len }}\n        {{- if lt (index $arr $min) (index $arr .) }} {{- $min = . }} {{- end -}}\n    {{- end }}\n    {{- if ne $min . }}\n        {{- $ := index $arr . }}\n        {{- $arr.Set . (index $arr $min) }}\n        {{- $arr.Set $min $ }}\n    {{- end -}}\n{{ end }}\n{{ $arr }}\n")))}d.isMDXComponent=!0}}]);