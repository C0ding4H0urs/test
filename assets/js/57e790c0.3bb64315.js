(self.webpackChunkyagpdb_cc_website=self.webpackChunkyagpdb_cc_website||[]).push([[7165],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=s(t),m=o,g=p["".concat(l,".").concat(m)]||p[m]||d[m]||i;return t?r.createElement(g,a(a({ref:n},u),{},{components:t})):r.createElement(g,a({ref:n},u))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=p;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var s=2;s<i;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},3114:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return u},default:function(){return p}});var r=t(2122),o=t(9756),i=(t(7294),t(3905)),a=["components"],c={sidebar_position:13,title:"Reaction Logs"},l=void 0,s={unversionedId:"utilities/reactionlogs",id:"utilities/reactionlogs",isDocsHomePage:!1,title:"Reaction Logs",description:"This command allows you to set up a reaction logging.",source:"@site/docs/utilities/reactionlogs.md",sourceDirName:"utilities",slug:"/utilities/reactionlogs",permalink:"/utilities/reactionlogs",editUrl:"https://github.com/yagpdb-cc/yagpdb-cc/edit/master/yagpdb-cc-website/docs/utilities/reactionlogs.md",version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13,title:"Reaction Logs"},sidebar:"tutorialSidebar",previous:{title:"Random Color",permalink:"/utilities/randomcolor"},next:{title:"Send",permalink:"/utilities/send"}},u=[],d={toc:u};function p(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This command allows you to set up a reaction logging."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Trigger Type:")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Reaction")," on ",(0,i.kt)("inlineCode",{parentName:"p"},"Added and Removed")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'{{/*\n          This command allows you to set up a reaction logging.\n\n          Recommended trigger: Reaction - Added + Removed\n*/}}\n\n\n{{/* CONFIGURATION VALUES START */}}\n\n{{$logging_channel_id := .Channel.ID}} {{/* change this to your logging channel id*/}}\n\n{{/* CONFIGURATION VALUES END */}}\n\n{{/* Actual CODE */}}\n{{$reaction_url := ""}}\n\n{{with .Reaction.Emoji.ID}}\n    {{$ext := ".png"}}{{if $.Reaction.Emoji.Animated}}{{$ext = ".gif"}}{{end}}\n    {{$reaction_url = printf "https://cdn.discordapp.com/emojis/%d%s" . $ext}}\n{{else}}\n    {{$emoji_U := ""}}\n    {{- range toRune .Reaction.Emoji.Name }}\n        {{- $emoji_U = joinStr "-" $emoji_U (printf "%04x" .) }}\n    {{- end -}}\n    {{ $reaction_url = print "https://raw.githubusercontent.com/iamcal/emoji-data/master/img-google-136/" $emoji_U ".png" }}\n{{end}}\n{{$addrem := "`Removed`"}}{{if .ReactionAdded}}{{$addrem = "`Added`"}}{{end}}\n\n{{sendMessage $logging_channel_id (cembed "description" (print "**Reaction:** "  $addrem "\\n**By:**[ " .User "](https://discord.com/users/" .User.ID ")") "color" 0xFF0000  \n"fields" (cslice (sdict "name" "Message location: " "value" (joinStr "" "[#" .Channel.Name "](https://discordapp.com/channels/" .Guild.ID "/" .Channel.ID "/" .ReactionMessage.ID ")") "inline" false))\n"thumbnail" (sdict "url" $reaction_url)\n)}}\n')))}p.isMDXComponent=!0}}]);