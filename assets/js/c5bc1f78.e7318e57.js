"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5005],{3905:function(e,n,t){t.d(n,{Zo:function(){return g},kt:function(){return p}});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=a.createContext({}),d=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},g=function(e){var n=d(e.components);return a.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,g=o(e,["components","mdxType","originalType","parentName"]),c=d(t),p=i,$=c["".concat(l,".").concat(p)]||c[p]||m[p]||r;return t?a.createElement($,s(s({ref:n},g),{},{components:t})):a.createElement($,s({ref:n},g))}));function p(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,s=new Array(r);s[0]=c;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"==typeof e?e:i,s[1]=o;for(var d=2;d<r;d++)s[d]=t[d];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},8272:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return d},toc:function(){return g},default:function(){return c}});var a=t(7462),i=t(3366),r=(t(7294),t(3905)),s=["components"],o={title:"Main CC"},l=void 0,d={unversionedId:"tags/main-cc",id:"tags/main-cc",isDocsHomePage:!1,title:"Main CC",description:"Main tag command, allows users to create/update/delete/view tags.",source:"@site/docs/tags/main-cc.md",sourceDirName:"tags",slug:"/tags/main-cc",permalink:"/tags/main-cc",editUrl:"https://github.com/yagpdb-cc/yagpdb-cc/edit/master/website/docs/tags/main-cc.md",tags:[],version:"current",frontMatter:{title:"Main CC"},sidebar:"sidebar",previous:{title:"Overview",permalink:"/tags/overview"},next:{title:"Reaction Handler",permalink:"/tags/reaction-handler"}},g=[{value:"Trigger",id:"trigger",children:[]},{value:"Usage",id:"usage",children:[]},{value:"Configuration",id:"configuration",children:[]},{value:"Code",id:"code",children:[]},{value:"Author",id:"author",children:[]}],m={toc:g};function c(e){var n=e.components,t=(0,i.Z)(e,s);return(0,r.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Main tag command, allows users to create/update/delete/view tags."),(0,r.kt)("p",null,"For more information about the tag system, see ",(0,r.kt)("a",{parentName:"p",href:"overview"},"this")," page."),(0,r.kt)("h2",{id:"trigger"},"Trigger"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("inlineCode",{parentName:"p"},"StartsWith"),(0,r.kt)("br",null),"\n",(0,r.kt)("strong",{parentName:"p"},"Trigger:")," ",(0,r.kt)("inlineCode",{parentName:"p"},";")),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},";tag add <name> <value>")," - Adds a tag with the name and value given."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},";tag del <name>")," - Deletes the tag with the value given."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},";tag addalias <name> <aliases...>")," - Adds the aliases provided to the tag with the name given."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},";tag delalias <name> <alias>")," - Removes the alias from the tag with the name given."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},";tag list")," - Lists all tags."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},";tag info <name>")," - Views information about the tag with the name provided."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},";<tag>")," - Views the value of the tag given. For example, if we had a tag with the name ",(0,r.kt)("inlineCode",{parentName:"li"},"foobar"),", ",(0,r.kt)("inlineCode",{parentName:"li"},";foobar")," would bring up the value of that tag.")),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Tag name restrictions")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Tag names must not contain the ",(0,r.kt)("inlineCode",{parentName:"p"},"|"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"_"),", or ",(0,r.kt)("inlineCode",{parentName:"p"},"%")," characters and be between 1 and 25 characters in length. This also applies to aliases."))),(0,r.kt)("h2",{id:"configuration"},"Configuration"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\ud83d\udccc ",(0,r.kt)("inlineCode",{parentName:"li"},"$modRoles"),(0,r.kt)("br",null),"\nList of moderator role IDs. A member with any one of these roles will be able to manage tags (aka add, delete, and update).")),(0,r.kt)("h2",{id:"code"},"Code"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-gotmpl",metastring:"file=../../../src/tags/tags.go.tmpl",file:"../../../src/tags/tags.go.tmpl"},'{{/*\n    Main command for the tag system.\n    See <https://yagpdb-cc.github.io/tags/main-cc> for more information.\n\n    Author: jo3-l <https://github.com/jo3-l>\n*/}}\n\n{{/* Configurable values start */}}\n{{ $modRoles := cslice }}\n{{/* End of configurable values */}}\n\n{{ $isCmd := reFind "^tags? *" .StrippedMsg }}\n{{ $safeName := `^[^\\|_%]{1,25}$` }}\n\n{{ define "getTag" }}\n    {{ $tagName := lower .Name }}\n    {{ $tag := 0 }}\n    {{ $entries := dbTopEntries (printf "tg.%%|%s|%%" $tagName) 1 0 }}\n    {{ if len $entries }} {{ $tag = index $entries 0 }} {{ end }}\n    {{ .Set "Tag" $tag }}\n{{ end }}\n\n{{ $isMod := false }}\n{{ range .Member.Roles }}\n    {{- if in $modRoles . }}\n        {{- $isMod = true }}\n    {{- end -}}\n{{ end }}\n\n{{ if $isCmd }}\n    {{ $cmd := "" }}\n    {{ $args := cslice }}\n    {{ if gt (len .CmdArgs) 1 }} {{ $cmd = index .CmdArgs 1 }} {{ end }}\n    {{ if gt (len .CmdArgs ) 2 }}  {{ $args = slice .CmdArgs 2 }} {{ end }}\n\n    {{ if and (eq $cmd "add") (ge (len $args) 2) }}\n        {{ if $isMod }}\n            {{ $tagName := index $args 0 | lower }}\n            {{ $tagContent := slice $args 1 | joinStr " " }}\n            {{ if reFind $safeName $tagName }}\n                {{ $data := sdict "Name" $tagName }}\n                {{ template "getTag" $data }}\n                {{ if not $data.Tag }}\n                    {{ dbSet 0 (printf "tg.|%s|" $tagName) $tagContent }}\n                    Successfully added a tag with the name `{{ $tagName }}`.\n                {{ else }}\n                    That tag already exists.\n                {{ end }}\n            {{ else }}\n                Tag names must not contain the `|`, `_`, or `%` character and be under 25 characters!\n            {{ end }}\n        {{ else }}\n            Sorry, adding tags is something only moderators can do.\n        {{ end }}\n\n    {{ else if and (eq $cmd "del") (len $args) }}\n        {{ if $isMod }}\n            {{ $toDelete := joinStr " " $args }}\n            {{ $data := sdict "Name" $toDelete }}\n            {{ template "getTag" $data }}\n            {{ with $data.Tag }}\n                {{ dbDelByID .UserID .ID }}\n                Successfully deleted the tag `{{ index (split (slice .Key 4 (sub (len .Key) 1)) "|") 0 }}`!\n            {{ else }}\n                Sorry, that tag does not exist.\n            {{ end }}\n        {{ else }}\n            Sorry, deleting tags is something only moderators can do.\n        {{ end }}\n\n    {{ else if and (eq $cmd "info") (len $args) }}\n        {{ $tagName := joinStr " " $args }}\n        {{ $data := sdict "Name" $tagName }}\n        {{ template "getTag" $data }}\n        {{ with $data.Tag }}\n            {{ $aliases := split (slice .Key 4 (sub (len .Key) 1)) "|" }}\n            {{ $list := "" }}\n            {{ if ge (len $aliases) 2 }}\n                {{ range $k, $ := slice $aliases 1 }}\n                    {{- if $k }}\n                        {{- $list = joinStr "" $list ", `" . "`" }}\n                    {{- else if . }}\n                        {{- $list = printf "`%s`" . }}\n                    {{- end -}}\n                {{ end }}\n            {{ end }}\n            {{ sendMessage nil (cembed\n                "title" "\u276f Tag Info"\n                "color" 14232643\n                "fields" (cslice\n                    (sdict "name" "\u276f Name" "value" (index $aliases 0))\n                    (sdict "name" "\u276f Aliases" "value" (or $list "n/a"))\n                    (sdict "name" "\u276f Created At" "value" (.CreatedAt.Format "Jan 02, 2006 3:04 PM"))\n                )\n            ) }}\n        {{ else }}\n            That tag does not exist. Try again?\n        {{ end }}\n\n    {{ else if and (eq $cmd "edit") (ge (len $args) 2) }}\n        {{ if $isMod }}\n            {{ $tagName := index $args 0 }}\n            {{ $tagContent := slice $args 1 | joinStr " " }}\n            {{ if reFind $safeName $tagName }}\n                {{ $data := sdict "Name" $tagName }}\n                {{ template "getTag" $data }}\n                {{ with $data.Tag }}\n                    {{ dbSet 0 .Key $tagContent }}\n                    Successfully edited the content of the tag `{{ $tagName }}`.\n                {{ else }}\n                    Sorry, that tag does not exist!\n                {{ end }}\n            {{ else }}\n                That tag does not exist!\n            {{ end }}\n        {{ else }}\n            Sorry, editing tags is something only moderators can do!\n        {{ end }}\n\n    {{ else if and (eq $cmd "addalias") (ge (len $args) 2) }}\n        {{ if $isMod }}\n            {{ $tagName := index $args 0 }}\n            {{ $aliases := slice $args 1 }}\n            {{ $valid := true }}\n            {{ $key := printf "tg.|%s|" $tagName }}\n            {{ range $k, $ := $aliases }}\n                {{- if not (reFind $safeName .) }}\n                    {{- $valid = false }}\n                {{- else if $k }}\n                    {{- $key = joinStr "" $key "|" (lower .) }}\n                {{- else }}\n                    {{- $key = joinStr "" $key (lower .) }}\n                {{- end -}}\n            {{ end }}\n            {{ if and (reFind $safeName $tagName) $valid }}\n                {{ $data := sdict "Name" $tagName }}\n                {{ template "getTag" $data }}\n                {{ with $data.Tag }}\n                    {{ dbDelByID .UserID .ID }}\n                    {{ $newKey := joinStr "" $key "|" }}\n                    {{ if gt (len $newKey) 256 }}\n                        Sorry, that alias was too long. Try again.\n                    {{ else }}\n                        {{ dbSet 0 (joinStr "" $key "|") .Value }}\n                        Successfully added {{ len $aliases }} aliases to the tag `{{ $tagName }}`!\n                    {{ end }}\n                {{ else }}\n                    Sorry, that tag does not exist.\n                {{ end }}\n            {{ else }}\n                Sorry, some aliases provided were not valid! Try again.\n            {{ end }}\n        {{ else }}\n            Sorry, adding aliases to tags is something only moderators can do!\n        {{ end }}\n\n    {{ else if and (eq $cmd "delalias") (ge (len $args) 2) }}\n        {{ if $isMod }}\n            {{ $tagName := index $args 0 }}\n            {{ $toRemove := slice $args 1 | joinStr " " | lower }}\n            {{ $data := sdict "Name" $tagName }}\n            {{ template "getTag" $data }}\n            {{ with $data.Tag }}\n                {{ $aliases := split (slice .Key 4 (sub (len .Key) 1)) "|" }}\n                {{ $tagName := printf "tg." }}\n                {{ if eq (len $aliases) 1 }}\n                    Sorry, you cannot remove an alias from a tag with only 1 alias.\n                {{ else }}\n                    {{ range $aliases }}\n                        {{- if ne $toRemove . }}\n                            {{- $tagName = joinStr "" $tagName "|" . }}\n                        {{- end -}}\n                    {{ end }}\n                    {{ $tagName = joinStr "" $tagName "|" }}\n                    {{ dbDelByID .UserID .ID }}\n                    {{ dbSet 0 $tagName .Value }}\n                    Successfully removed alias!\n                {{ end }}\n            {{ else }}\n                That tag does not exist.\n            {{ end }}\n        {{ else }}\n            Sorry, deleting aliases from tags is something only moderators can do!\n        {{ end }}\n\n    {{ else if eq $cmd "list" }}\n        {{ $page := 1 }}\n        {{ if eq (len $args) 1 }} {{ with reFind `^\\d+$` (index $args 0) }} {{ $page = toInt . }} {{ end }} {{ end }}\n        {{ $skip := mult (sub $page 1) 10 }}\n        {{ $tags := dbTopEntries "tg.|%|" 10 $skip }}\n        {{ if not (len $tags) }}\n            There were no tags on that page!\n        {{ else }}\n            {{ $number := $skip }}\n            {{ $display := "" }}\n            {{ range $k, $ := $tags }}\n                {{- $tagName := index (split (slice .Key 4 (sub (len .Key) 1)) "|") 0 }}\n                {{- if $k }}\n                    {{- $display = joinStr "" $display ", `" $tagName "`" }}\n                {{- else }}\n                    {{- $display = printf "`%s`" $tagName }}\n                {{- end -}}\n            {{ end }}\n            {{ $id := sendMessageRetID nil (cembed\n                "title" "\u276f Tags"\n                "color" 14232643\n                "description" $display\n                "footer" (sdict "text" (joinStr "" "Page " $page))\n            ) }}\n            {{ addMessageReactions nil $id "\u25c0\ufe0f" "\u25b6\ufe0f" }}\n        {{ end }}\n\n    {{ else }}\n        {{ sendMessage nil (cembed\n            "title" "\ud83d\udd8a\ufe0f Tags"\n            "description" (joinStr "\\n\\n"\n                "`tag add <name> <content>`: Adds a tag with the given content."\n                "`tag del <name>`: Deletes the given tag."\n                "`tag addalias <name> <...aliases>`: Adds the given aliases to the tag provided."\n                "`tag delalias <name> <alias>`: Removes the given alias from the tag provided."\n                "`tag edit <name> <new-content>`: Edits the tag\'s content to the content provided."\n                "`tag info <tag>`: Info on a given tag."\n                "`tag list`: Lists all tags."\n            )\n            "color" 14232643\n        ) }}\n    {{ end }}\n{{ else }}\n    {{ $tagName := reFind $safeName .StrippedMsg }}\n    {{ if $tagName }}\n        {{ $data := sdict "Name" $tagName }}\n        {{ template "getTag" $data }}\n        {{ with $data.Tag }}\n            {{ sendMessage nil .Value }}\n        {{ end }}\n    {{ end }}\n{{ end }}\n')),(0,r.kt)("h2",{id:"author"},"Author"),(0,r.kt)("p",null,"This custom command was written by ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/jo3-l"},"@jo3-l"),"."))}c.isMDXComponent=!0}}]);