(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3981],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return l},kt:function(){return m}});var n=r(7294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,s=function(e,t){if(null==e)return{};var r,n,s={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,s=e.mdxType,i=e.originalType,c=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),d=u(r),m=s,g=d["".concat(c,".").concat(m)]||d[m]||p[m]||i;return r?n.createElement(g,o(o({ref:t},l),{},{components:r})):n.createElement(g,o({ref:t},l))}));function m(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var i=r.length,o=new Array(i);o[0]=d;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:s,o[1]=a;for(var u=2;u<i;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6149:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return l},default:function(){return d}});var n=r(2122),s=r(9756),i=(r(7294),r(3905)),o=["components"],a={sidebar_position:15,title:"Display Struct"},c=void 0,u={unversionedId:"utilities/display-struct",id:"utilities/display-struct",isDocsHomePage:!1,title:"Display Struct",description:"This command shows all the avaliable properties and methods of a structure with a link to the Discord docs on that structure.",source:"@site/docs/utilities/display-struct.md",sourceDirName:"utilities",slug:"/utilities/display-struct",permalink:"/utilities/display-struct",editUrl:"https://github.com/yagpdb-cc/yagpdb-cc/edit/master/website/docs/utilities/display-struct.md",version:"current",sidebarPosition:15,frontMatter:{sidebar_position:15,title:"Display Struct"},sidebar:"tutorialSidebar",previous:{title:"Send Message",permalink:"/utilities/send-message"},next:{title:"View Time",permalink:"/utilities/view-time"}},l=[],p={toc:l};function d(e){var t=e.components,r=(0,s.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This command shows all the avaliable properties and methods of a structure with a link to the Discord docs on that structure."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Trigger Type:")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Regex")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Trigger:")," ",(0,i.kt)("inlineCode",{parentName:"p"},"\\A(-|<@!?204255221017214977>\\s*)(struct)(ure)?(\\s+|\\z)")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Usage:"),(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("inlineCode",{parentName:"p"},"-struct <struct>")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'{{/*\n    This command shows all the avaliable properties and methods of a structure with a link to the Discord docs on that structure.\n    Usage: `-struct <struct>`.\n\n    Recommended trigger: Regex trigger with trigger `\\A(-|<@!?204255221017214977>\\s*)(struct)(ure)?(\\s+|\\z)`\n*/}}\n\n{{ $targets := sdict "Channel" .Channel "Guild" .Guild "User" .User "Member" .Member "Message" .Message }}\n{{ $resources := sdict\n    "Channel" "https://discordapp.com/developers/docs/resources/channel#channel-object"\n    "Guild" "https://discordapp.com/developers/docs/resources/guild#guild-resource"\n    "User" "https://discordapp.com/developers/docs/resources/user#user-object"\n    "Member" "https://discordapp.com/developers/docs/resources/guild#guild-member-object"\n    "Message" "https://discordapp.com/developers/docs/resources/channel#message-object"\n}}\n{{ $target := 0 }}\n{{ $name := "" }}\n{{ $input := (parseArgs 1 "**Syntax:** -struct <struct>" (carg "string" "structure")).Get 0 | lower }}\n{{ range $struct, $v := $targets }}\n    {{- if eq (lower $struct) $input }}\n        {{- $target = $v }}\n        {{- $name = $struct }}\n    {{- end -}}\n{{ end }}\n{{ if $target}}\n    {{ $json := printf "```go\\n%+v```" $target }}\n    {{ sendMessage nil (cembed\n        "title" (printf "\u276f %s Object" $name)\n        "url" (index $resources $name)\n        "description" $json\n        "color" 14232643\n    ) }}\n{{ else }}\n    Please provide a valid target to view.\n{{ end }}\n')))}d.isMDXComponent=!0}}]);