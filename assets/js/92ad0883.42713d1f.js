(self.webpackChunkyagpdb_cc_website=self.webpackChunkyagpdb_cc_website||[]).push([[9595],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return c},kt:function(){return d}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),u=p(t),d=i,g=u["".concat(l,".").concat(d)]||u[d]||m[d]||o;return t?r.createElement(g,s(s({ref:n},c),{},{components:t})):r.createElement(g,s({ref:n},c))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,s=new Array(o);s[0]=u;var a={};for(var l in n)hasOwnProperty.call(n,l)&&(a[l]=n[l]);a.originalType=e,a.mdxType="string"==typeof e?e:i,s[1]=a;for(var p=2;p<o;p++)s[p]=t[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},1367:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return a},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return c},default:function(){return u}});var r=t(2122),i=t(9756),o=(t(7294),t(3905)),s=["components"],a={sidebar_position:18,title:"Snipe"},l=void 0,p={unversionedId:"utilities/snipe",id:"utilities/snipe",isDocsHomePage:!1,title:"Snipe",description:"This command retrieves the most recent deleted message in the past hour(non-premium)/ 12 hours(premium)",source:"@site/docs/utilities/snipe.md",sourceDirName:"utilities",slug:"/utilities/snipe",permalink:"/utilities/snipe",editUrl:"https://github.com/yagpdb-cc/yagpdb-cc/edit/master/yagpdb-cc-website/docs/utilities/snipe.md",version:"current",sidebarPosition:18,frontMatter:{sidebar_position:18,title:"Snipe"},sidebar:"tutorialSidebar",previous:{title:"World Clock",permalink:"/utilities/worldclock"}},c=[],m={toc:c};function u(e){var n=e.components,t=(0,i.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This command retrieves the most recent deleted message in the past hour(non-premium)/ 12 hours(premium)"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Trigger Type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"Command")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Trigger:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"snipe")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Usage:"),(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"-snipe")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'{{/* \n\n    This command retrieves the most recent deleted message in the past hour(non-premium)/ 12 hours(premium)\n\n    Trigger: snipe\n    Trigger Type: Command\n\n    Credits:\n    zen | \u30bc\u30f3#0008 (https://github.com/z3nn13/)\n\n*/}}\n\n{{/* Global Variables */}}\n{{ $ex := or (and (reFind "a_" .Guild.Icon) "gif" ) "png" }}\n{{ $icon := print "https://cdn.discordapp.com/icons/" .Guild.ID "/" .Guild.Icon "." $ex "?size=1024" }}\n{{ $regex := `\\n\\n\\x60(\\d{1,2}) (\\w{5,7}) ago \\((?:.{24})\\)\\x60 \\*{2}(?:[^#]*)\\*{2}\\#\\d{4} \\(ID (\\d{17,19})\\)\\: ` }}\n{{ $imgRegex := `(?i)https?:(?:\\/\\/(?:[^\\/?#]*))?(?:[^?\\n#\\s]*?\\/[^?\\n#\\s]+\\.(?:jpg|jpeg|png|gif|tif|webp))(?:\\?(?:[^?\\n#\\s]*))?(?:#(.*))?`}}\n{{ $undelete := execAdmin "ud -a" }}\n\n{{ with reFindAllSubmatches $regex $undelete }}\n        {{ $time := printf "%s%s" (index . 0 1) (index . 0 2) | toDuration }}\n        {{ $member := (index . 0 3 | toInt64 | getMember) }}\n        {{ $message := index (reSplit $regex $undelete 3) 1 }}\n\n        {{ $file := "" }}{{ $image_url := "" }}\n        {{ if $image_url = reFind $imgRegex  $message }}\n                {{ $split := reSplit $imgRegex $message 2 }}\n                {{ $message = print "> \u26a0\ufe0f An image link is detected\\n" (joinStr "" $split) }}\n        {{ end }}\n        {{ if gt (toRune $message|len) 2000 }}{{/* Preventing 2k limit error */}}\n                {{ $file = $message }}\n                {{ $message = "*Message exceeded 2k limit. Contents sent as file instead*"}}\n        {{ else if not $message }}\n                {{ $message = "> \u26a0\ufe0f An attachment/embed was deleted" }} \n        {{ end }}\n\n        {{ $col := 0 }}{{ $p := 0 }}{{ $r := $member.Roles }}\n        {{ range $.Guild.Roles}}{{if and (in $r .ID) (.Color) (lt $p .Position)}}{{$p = .Position}}{{$col = .Color}}{{end}}{{end }}\n\n        {{ $embed := cembed "author" (sdict "name" (print $member.User.String " (ID " $member.User.ID ")") "icon_url" ($member.User.AvatarURL "256"))\n            "description" $message \n            "color" $col \n            "image" (sdict "url" $image_url)\n            "footer" (sdict "text" (printf "%s %s ago" (index . 0 1) (index . 0 2)) "icon_url" $icon) \n            "timestamp" (currentTime.Add (mult $time -1|toDuration)) }}\n\n        {{ with $file }}\n            {{ sendMessage nil (complexMessage "file" . "embed" $embed) }}\n        {{ else }}\n            {{ sendMessage nil $embed }}\n        {{ end }}\n{{ else }}\n        {{ sendMessage nil "Nothing to snipe here" }}\n{{ end }}\n')))}u.isMDXComponent=!0}}]);