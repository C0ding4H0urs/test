(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4076],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function m(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=m(e,["components","mdxType","originalType","parentName"]),u=s(n),d=a,g=u["".concat(l,".").concat(d)]||u[d]||c[d]||i;return n?r.createElement(g,o(o({ref:t},p),{},{components:n})):r.createElement(g,o({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var m={};for(var l in t)hasOwnProperty.call(t,l)&&(m[l]=t[l]);m.originalType=e,m.mdxType="string"==typeof e?e:a,o[1]=m;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3567:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return m},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return p},default:function(){return u}});var r=n(2122),a=n(9756),i=(n(7294),n(3905)),o=["components"],m={title:"Meme Generator"},l=void 0,s={unversionedId:"fun/meme",id:"fun/meme",isDocsHomePage:!1,title:"Meme Generator",description:"This command generates a meme using a template and top/bottom text.",source:"@site/docs/fun/meme.md",sourceDirName:"fun",slug:"/fun/meme",permalink:"/fun/meme",editUrl:"https://github.com/yagpdb-cc/yagpdb-cc/edit/master/website/docs/fun/meme.md",version:"current",frontMatter:{title:"Meme Generator"},sidebar:"sidebar",previous:{title:"Maze Generator",permalink:"/fun/maze"},next:{title:"Mock Text",permalink:"/fun/mock"}},p=[{value:"Trigger",id:"trigger",children:[]},{value:"Usage",id:"usage",children:[]},{value:"Code",id:"code",children:[]},{value:"Author",id:"author",children:[]}],c={toc:p};function u(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This command generates a meme using a template and top/bottom text."),(0,i.kt)("h2",{id:"trigger"},"Trigger"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Type:")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Command"),(0,i.kt)("br",null),"\n",(0,i.kt)("strong",{parentName:"p"},"Trigger:")," ",(0,i.kt)("inlineCode",{parentName:"p"},"meme")),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-meme <template> <top-text> <bottom-text>")," - Generates a meme using the template, top text and bottom text provided. The template may be either ",(0,i.kt)("inlineCode",{parentName:"li"},"both"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"buzz"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"doge"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"joker"),", or ",(0,i.kt)("inlineCode",{parentName:"li"},"sad-biden"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-meme custom <top-text> <bottom-text> <image-link>")," - Generates a meme using the image, top text and bottom text provided. Instead of an image link, you may also attach an image to the message.")),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Special characters")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Sometimes, special characters will mess up the link, so we advise that you only use the following special characters in the top/bottom text: ",(0,i.kt)("inlineCode",{parentName:"p"}," "),", ",(0,i.kt)("inlineCode",{parentName:"p"},"?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"%"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"#")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"/"),"."))),(0,i.kt)("h2",{id:"code"},"Code"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gotmpl",metastring:"file=../../../src/fun/meme.go.tmpl",file:"../../../src/fun/meme.go.tmpl"},'{{/*\n    Creates a meme based off user input.\n    See <https://yagpdb-cc.github.io/fun/meme> for more information.\n\n    Author: GenryMg <https://github.com/hng12>\n*/}}\n\n{{ $link := "https://memegen.link" }}\n{{ $args := parseArgs 3 (`Usage: -meme <meme template> "top text" "bottom text"`)\n    (carg "string" "template")\n    (carg "string" "top-text")\n    (carg "string" "bottom-text")\n    (carg "string" "custom-link")\n}}\n{{ $replacers := cslice " " "?" "%" "#" "/" }}\n{{ $replacements := cslice "_" "~q" "~p" "~h" "~s" }}\n{{ $meme := $args.Get 0 }}\n{{ $top := $args.Get 1 }}\n{{ $bottom := $args.Get 2 }}\n{{ range $i, $ := $replacers }}\n    {{- $meme = split $meme . | joinStr (index $replacements $i) }}\n    {{- $top = split $top . | joinStr (index $replacements $i) }}\n    {{- $bottom = split $bottom . | joinStr (index $replacements $i) -}}\n{{ end }}\n{{if or ($args.IsSet 3) .Message.Attachments }}\n    {{ $cuslink := $args.Get 3 }}\n    {{ with .Message.Attachments }}\n        {{ $cuslink = (index . 0).URL }}\n    {{ end }}\n    {{ $msglink := joinStr "/" $link $meme $top $bottom }}\n    {{ $msglink = joinStr "" $msglink ".jpg?alt=" }}\n    {{ $msglink1 := joinStr "" $msglink $cuslink }}\n    {{ sendMessage nil (cembed "image" (sdict "url" $msglink1)) }}\n{{else}}\n    {{ $msglink := joinStr "/" $link $meme $top $bottom }}\n    {{ $msglink = joinStr "" $msglink ".jpg" }}\n    {{ $col := randInt 111111 999999 }}\n    {{ sendMessage nil (cembed\n        "title" "Here is your meme"\n        "image" (sdict "url" $msglink)\n        "color" $col\n    ) }}\n{{end}}\n')),(0,i.kt)("h2",{id:"author"},"Author"),(0,i.kt)("p",null,"This custom command was written by ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/hng12"},"GenryMg"),"."))}u.isMDXComponent=!0}}]);